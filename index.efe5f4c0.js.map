{"mappings":"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","sources":["main.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/source/common.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tileurlfunction.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ol_1 = require(\"ol\");\nvar Tile_1 = __importDefault(require(\"ol/layer/Tile\"));\nvar OSM_1 = __importDefault(require(\"ol/source/OSM\"));\nvar map = new ol_1.Map({\n    target: 'map',\n    layers: [\n        new Tile_1.default({\n            source: new OSM_1.default()\n        })\n    ],\n    view: new ol_1.View({\n        center: [0, 0],\n        zoom: 2\n    })\n});\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n"],"names":["$beb310745d0018c3$var$__importDefault","$beb310745d0018c3$exports","__importDefault","mod","__esModule","Object","defineProperty","value","$664ea55fc19a08b3$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$31189420a57baeba$export$8eda8fbd1364c8a1","a","b","$31189420a57baeba$export$45934da9231b7323","arr","target","direction","n","length","i","$31189420a57baeba$export$46e35401bc090c62","data","extension","Array","isArray","$31189420a57baeba$export$bcc761834e33d339","arr1","arr2","len1","$351d82b0a78a5705$export$ad8dd69aa6772cd0","$351d82b0a78a5705$export$5c50afa32081505e","$351d82b0a78a5705$export$3850addf0fb4e6a7","$e14829ca1f519173$export$18e1b4ff5b3c2297","Error","$e14829ca1f519173$var$uidCounter_","$e14829ca1f519173$export$604e9536b9e0488a","obj","ol_uid","String","$e14829ca1f519173$export$f2eb173e8f6e4130","$527d7f7180afe02d$var$ua","navigator","userAgent","toLowerCase","$527d7f7180afe02d$export$543c908bf17a24fb","indexOf","$527d7f7180afe02d$export$bccc8605349feea7","$527d7f7180afe02d$export$f16ffc71033a7aaa","$527d7f7180afe02d$export$1940d5d2b4cf824d","devicePixelRatio","$527d7f7180afe02d$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$527d7f7180afe02d$export$9544418e5c6fedfe","Image","decode","$527d7f7180afe02d$export$700ce540937d8c69","passive","options","get","window","addEventListener","removeEventListener","error","$2e8d627307dae003$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$2e8d627307dae003$var$__extends","$9531785aa63836ff$export$b8795f4f643ce74f","assertion","errorCode","$2e8d627307dae003$exports","default","$d26dae22fe1d838f$var$transformStringDiv","$d26dae22fe1d838f$export$6af9bbf310c9e4bf","transform","coordinate","x","y","$d26dae22fe1d838f$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$d26dae22fe1d838f$export$6e6aac0f60e83c70","source","mat","det","c","d","e","f","$d26dae22fe1d838f$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$5e2b7eeacdecf354$export$9099ad97b570f7c","$9b4dc89090328257$export$9099ad97b570f7c","$6979b253edf31824$export$a7ecbd362d65c1fe","coordinates","extent","$6979b253edf31824$export$dbb3d72606cdc11","ii","$6979b253edf31824$export$2852acc8f8b94686","$6979b253edf31824$export$c7d6a927f416dd39","dx","dy","$6979b253edf31824$export$c422a9fcb5f1ee5c","$6979b253edf31824$export$cc70e7e516e4370f","$6979b253edf31824$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$6979b253edf31824$export$ea8082d0226d35a5","opt_extent","$6979b253edf31824$export$80741250c74fd4fa","$6979b253edf31824$export$bcc761834e33d339","extent1","extent2","$6979b253edf31824$export$4b116deb3079b147","flatCoordinates","offset","end","stride","$6979b253edf31824$export$8696fee511ea7c7a","min","max","$6979b253edf31824$export$c26f7b9c5adc34b4","callback","val","$6979b253edf31824$export$3932426cd8118930","$6979b253edf31824$export$4e2fc25ce97f3583","$6979b253edf31824$export$35aedeaeee8be6cd","$6979b253edf31824$export$5100f0815ea32995","$6979b253edf31824$export$ab4e37d31d15614d","area","$6979b253edf31824$export$988399e568471db1","$6979b253edf31824$export$3dc3550566517965","$6979b253edf31824$export$e178c8044d3d0a05","$6979b253edf31824$export$339e303bf205caae","$6979b253edf31824$export$38622892ed79bdc7","corner","$6979b253edf31824$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6979b253edf31824$export$c491031eb9adcc3a","intersection","$6979b253edf31824$export$c3bd2c3b798b0350","$6979b253edf31824$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$6979b253edf31824$var$_boundingExtentXYs","$41189646474e5084$export$4b8705656de00c72","$41189646474e5084$export$4a376e0f60d976ee","cosh","exp","$41189646474e5084$export$e08236045caaa3e1","log2","log","LOG2E","$41189646474e5084$export$fd0b1e5ac4df516c","t","$41189646474e5084$export$8b6706701cd75ea9","$41189646474e5084$export$11468133b1231643","angleInRadians","PI","$41189646474e5084$export$4fc80c88d72f096","angleInDegrees","$41189646474e5084$export$3334706ffb3dccb1","r","$41189646474e5084$export$45ca8e7f50ccf2e0","$05f8d3eb3a3b3632$var$HEX_COLOR_RE_","$05f8d3eb3a3b3632$var$NAMED_COLOR_RE_","$05f8d3eb3a3b3632$export$9fe004474d6f7f65","color","g","undefined","$05f8d3eb3a3b3632$export$47bee913e0e80eb4","$05f8d3eb3a3b3632$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$05f8d3eb3a3b3632$export$2e33abec8aecd572","$0828fcafb706d3fc$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","src","crossOrigin","$0828fcafb706d3fc$var$getKey","set","setSize","maxCacheSize","$0828fcafb706d3fc$export$601b9e2be44c7cb2","$69c59045833c3003$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$78afe97655c173a4$export$9099ad97b570f7c","$43f7a9f222abbea0$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","hasOwnProperty","$43f7a9f222abbea0$export$97fff7491bd246bd","object","property","$43f7a9f222abbea0$export$207c30846165e93a","values","$43f7a9f222abbea0$export$988399e568471db1","$ad3de02656425e16$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ad3de02656425e16$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$1f1034d6043b657b$export$9099ad97b570f7c","$56a06269a268820b$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$56a06269a268820b$export$d2df825b2d8bc2ba","$56a06269a268820b$export$6dee5fd4fdf600ff","$63adf90947e79212$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$63adf90947e79212$var$__extends","changed","getRevision","len","ol_key","$63adf90947e79212$export$21f63b82add5980c","$ad3de02656425e16$exports","$63adf90947e79212$export$9099ad97b570f7c","$9403ba232d3d3401$export$b902cfd711fa7f06","ObjectEvent","oldValue","$9403ba232d3d3401$var$__extends","$9403ba232d3d3401$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$63adf90947e79212$exports","$af9ac451f9e710c1$export$9099ad97b570f7c","$5bc06fc72e60a1e5$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$5bc06fc72e60a1e5$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$9403ba232d3d3401$exports","$89b1d20a080b27f0$export$9099ad97b570f7c","$12755424859afe42$export$9099ad97b570f7c","$c42f11a8ed244eef$export$16970faadcd3f29b","layerState","viewState","zoom","$c42f11a8ed244eef$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","$c42f11a8ed244eef$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$5bc06fc72e60a1e5$exports","$3b0bd531a043cbd1$export$bcc761834e33d339","coordinate1","coordinate2","equals","$3b0bd531a043cbd1$export$d40e2456b1281660","cosAngle","sinAngle","$3b0bd531a043cbd1$export$c8ebaff90a21375a","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","canWrapX","sourceExtentWidth","floor","$acb05479f915e9be$var$expireIconCache","$acb05479f915e9be$export$9099ad97b570f7c","MapRenderer","map_","$acb05479f915e9be$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","worldWidth","$3b0bd531a043cbd1$export$5a0d9577a24f3c5b","slice","offsets","layerStates","numLayers","matches","tmpCoord","j","$c42f11a8ed244eef$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$911ab4cf0143b734$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$911ab4cf0143b734$var$__extends","$8dfbec8593aa270d$export$4b206f1dd0085e9f","$8dfbec8593aa270d$export$6cfb92f3ca39d412","$8dfbec8593aa270d$export$a6463a3b3793c500","$8dfbec8593aa270d$var$fontRegEx","RegExp","$8dfbec8593aa270d$var$fontRegExMatchIndex","$8dfbec8593aa270d$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$8dfbec8593aa270d$export$e04cd5eb7e7428c6","$1999371b8a7a6e92$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$1999371b8a7a6e92$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$1999371b8a7a6e92$export$47503d53c08beb29","$0511c8c10849dc1a$export$907cf5cff4a8acb1","console","warn","$0511c8c10849dc1a$var$measureFont","$0511c8c10849dc1a$var$measureContext","$0511c8c10849dc1a$export$384c0f09c94ed6cc","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$0511c8c10849dc1a$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","$0511c8c10849dc1a$var$measureText","measureText","$a7bc897a99e1468c$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","$8dfbec8593aa270d$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$a7bc897a99e1468c$var$__extends","event_1","$911ab4cf0143b734$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$1999371b8a7a6e92$export$439ebc2b0f0ec9f4","display","getDataAtPixel","$acb05479f915e9be$exports","$404829bff740bb1b$export$9099ad97b570f7c","$6f518feb4a5d11c4$var$Property","$6f518feb4a5d11c4$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$6f518feb4a5d11c4$var$__extends","$6f518feb4a5d11c4$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$9b534bf563223e28$var$Property","$9b534bf563223e28$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$6f518feb4a5d11c4$exports","setLayers","$9b534bf563223e28$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$fb4925193e6007b2$export$9099ad97b570f7c","MapEvent","$fb4925193e6007b2$var$__extends","$87748d91c1ff80d0$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$87748d91c1ff80d0$var$__extends","getEventPixel","getCoordinateFromPixel","$fb4925193e6007b2$exports","$d1dde526982cc5ac$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a59fb3ca034fecde$export$9099ad97b570f7c","$08be60d5c9a54b41$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$08be60d5c9a54b41$var$__extends","emulateClick_","pointerEvent","newEvent","$87748d91c1ff80d0$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$97a07643bed490b2$export$9099ad97b570f7c","$de0c0f8112f90228$export$9099ad97b570f7c","$c6360ad74bd7a546$export$55b8074a560bbdf4","$c6360ad74bd7a546$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$64b89b0b3d0b4cba$export$9099ad97b570f7c","$40a9fb900c9e0ad4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$40a9fb900c9e0ad4$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$40a9fb900c9e0ad4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$a33c8584730caef5$export$9099ad97b570f7c","$c9c507281fcc3891$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$c9c507281fcc3891$export$af68584dedf5e52c","$c9c507281fcc3891$export$9099ad97b570f7c","$69221d06b0113aff$export$9099ad97b570f7c","$8d321ccd3e128174$export$9099ad97b570f7c","$c524398f6723d704$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7f3701aa8bdb506a$export$8c5f77743cd0e8b7","$7f3701aa8bdb506a$export$bb1f4f75177e5528","$7f3701aa8bdb506a$export$6fd015d56b8406c9","$7f3701aa8bdb506a$export$64afaa717a0c4932","$7f3701aa8bdb506a$export$2126dea64bc40b7b","tan","$7f3701aa8bdb506a$var$EPSG3857Projection","EPSG3857Projection","point","$7f3701aa8bdb506a$var$__extends","$7f3701aa8bdb506a$export$850c9b527a5298aa","$7f3701aa8bdb506a$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7f3701aa8bdb506a$export$f361696640082386","atan","$9fa231a87381e908$export$6fd015d56b8406c9","$9fa231a87381e908$export$af68584dedf5e52c","$9fa231a87381e908$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$9fa231a87381e908$var$__extends","$9fa231a87381e908$export$850c9b527a5298aa","$b355c55a4bde1b89$var$cache","$57e7e4423e192b2f$var$transforms","$57e7e4423e192b2f$export$568ed88074851180","destination","sourceCode","destinationCode","$1a993eb37fc0a4e5$export$761de677acb0d085","$1a993eb37fc0a4e5$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$1a993eb37fc0a4e5$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$e9b048d51236bbbc$export$3fbbaef54e2e9d28","$e9b048d51236bbbc$export$678028d364072132","$e9b048d51236bbbc$export$6308908a0016f099","$b355c55a4bde1b89$export$568ed88074851180","$e9b048d51236bbbc$export$7eb84799c931fe91","projectionLike","replace","$e9b048d51236bbbc$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$e9b048d51236bbbc$export$747af4f49bde2f53","vertices","$e9b048d51236bbbc$export$a42db349809b0c24","projections","$e9b048d51236bbbc$export$fd4cd3535c7ea97f","$e9b048d51236bbbc$export$f704437a72056fb8","defaultCode","$e9b048d51236bbbc$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$57e7e4423e192b2f$export$7eb84799c931fe91","$e9b048d51236bbbc$export$9336879ef6599bf5","$e9b048d51236bbbc$export$4b169b49e1a4823b","$e9b048d51236bbbc$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$e9b048d51236bbbc$var$userProjection","$e9b048d51236bbbc$export$4a182a4d53d7595c","$e9b048d51236bbbc$export$b5d00774755783fc","destProjection","$e9b048d51236bbbc$export$f87215506b474b9e","$5b15465d65b208f9$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$5b15465d65b208f9$export$eaafe0fae18e32b1","$c5d62abeb18093bc$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$c5d62abeb18093bc$var$getSmoothClampedResolution","$c5d62abeb18093bc$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$dd50dbab14b9e355$export$e97ec87d2336bd4e","$dd50dbab14b9e355$export$eaafe0fae18e32b1","$d316f2294d12f14b$export$9fbc3b1d6b2da9ec","pow","$d316f2294d12f14b$export$673b9849e2bc032c","$d316f2294d12f14b$export$1b5c1277e30d397d","$d316f2294d12f14b$export$5523e35ab8ae283a","$7f3701aa8bdb506a$exports","PROJECTIONS","$9fa231a87381e908$exports","fromEPSG4326","toEPSG4326","$0ad743cdd11ec12f$export$9099ad97b570f7c","$fb5c77af8a17a25c$export$92106241c01aa541","opt_dest","dest","$b682244a7d047928$var$tmpTransform","$b682244a7d047928$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$b682244a7d047928$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6979b253edf31824$export$d1e01ccfd06bf8ee","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$5caa66f67d70c90b$export$2a65008b73824080","layout","$5caa66f67d70c90b$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$5caa66f67d70c90b$export$9099ad97b570f7c","SimpleGeometry","$5caa66f67d70c90b$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$5caa66f67d70c90b$var$getLayoutForStride","anchorX","anchorY","k","$fb5c77af8a17a25c$export$d40e2456b1281660","$fb5c77af8a17a25c$export$8f869025bba9609b","$fb5c77af8a17a25c$export$41b0d7466cde8385","$b682244a7d047928$exports","$c8d16959777aa5d2$var$assignClosest","offset1","offset2","$c8d16959777aa5d2$export$acf7548d1f0e8581","squaredDelta","$c8d16959777aa5d2$export$ba38095f6bb45df2","ends","$c8d16959777aa5d2$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$c8d16959777aa5d2$export$3dd3914e22f9012e","$fa72d035ed15d370$export$e175f505890ac90f","$fa72d035ed15d370$export$ab1a51db55485752","coordinatess","opt_ends","jj","$f117f014c02c321b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$f117f014c02c321b$export$383ea8a1f2974dfb","$f117f014c02c321b$export$e29de4fdb2175738","$f117f014c02c321b$export$1df19a1eb5514c2f","simplifiedEnds","$8156c430059b0be1$export$92f32d891164b0ac","opt_coordinates","$8156c430059b0be1$export$d82a8a3167f968d","opt_coordinatess","$1720796d74226cac$export$9bf2059fd656d5e9","twiceArea","$1720796d74226cac$export$99cb92d00fd73c87","$14f82d27708e2673$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$14f82d27708e2673$var$__extends","getArea","$5caa66f67d70c90b$exports","$b7b44b2e7369d419$export$9099ad97b570f7c","Point","$b7b44b2e7369d419$var$__extends","$fa72d035ed15d370$export$a53e62528b652807","$d0ff7551bd225db7$export$f7b55b637f92fd7","$d0ff7551bd225db7$export$e2ed757909b25f63","wn","$d0ff7551bd225db7$export$51e46a3625992b91","$fba4e8b2345a6181$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$3f240441e8158030$export$26f047a5bfac4b1a","coordinatesExtent","ret","$453f0f3786b8ff29$export$40f3d9558cf6e846","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6979b253edf31824$export$525a75abb91115e3","$3f240441e8158030$export$717c2c7c46a5bf3d","$3f240441e8158030$export$f14bd9270666b480","$081640ea8b715cda$export$c77fe031a1447f2e","tmp","$e73c8a2e0bc9e480$export$add61ad31d0a68b4","edge","$e73c8a2e0bc9e480$export$586adaf930d9fdb6","opt_right","right","isClockwise","$e73c8a2e0bc9e480$export$325e57738fd8b321","$70159e2f3144e634$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$70159e2f3144e634$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$b7b44b2e7369d419$exports","getLinearRingCount","getLinearRing","$14f82d27708e2673$exports","getLinearRings","linearRings","$70159e2f3144e634$export$9099ad97b570f7c","$70159e2f3144e634$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$70159e2f3144e634$export$b50d271c6e9656cd","$70159e2f3144e634$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$70159e2f3144e634$export$5d1798f0e1df079","getRadius","startAngle","$4d9e33768334286e$var$animationCallback","returnValue","$4d9e33768334286e$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d9e33768334286e$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$c5d62abeb18093bc$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$c5d62abeb18093bc$export$7690ad4e930f454b","constraint","$4d9e33768334286e$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d9e33768334286e$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$4d9e33768334286e$var$calculateCenterOn","rotX","rotY","$4d9e33768334286e$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$4d9e33768334286e$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$e9b048d51236bbbc$export$a7d473ff80a6a3b","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$70159e2f3144e634$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$25e118ccc56a5e21$export$c563c2b7121f8771","$25e118ccc56a5e21$export$48d31d2725e4d98b","$3141486bef412326$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$9b534bf563223e28$exports","view","$4d9e33768334286e$exports","$3141486bef412326$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$40a9fb900c9e0ad4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$3141486bef412326$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$08be60d5c9a54b41$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","parseInt","$88abedb827e5ec1b$export$9099ad97b570f7c","Control","target_","listenerKeys","$88abedb827e5ec1b$var$__extends","mapEvent","$72fd36fb1a212cd3$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$72fd36fb1a212cd3$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$1999371b8a7a6e92$export$f0994cfd84ab1152","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$88abedb827e5ec1b$exports","$f0a10ea98a6cb519$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$f0a10ea98a6cb519$var$__extends","resetNorth_","$d3f921aa5a285174$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$d3f921aa5a285174$var$__extends","zoomByDelta_","currentZoom","newZoom","$0d5605eedb6da3c8$export$9099ad97b570f7c","$33139a7ba78491c7$export$63568b31cb17dd4d","$33139a7ba78491c7$export$d2c07614bfd6a817","$33139a7ba78491c7$export$9099ad97b570f7c","Interaction","setActive","$33139a7ba78491c7$var$__extends","active","$787de85327c916bb$export$9099ad97b570f7c","DoubleClickZoom","delta_","$787de85327c916bb$var$__extends","stopEvent","shiftKey","$33139a7ba78491c7$exports","zoomByDelta","$82cbbbeb425d67d7$export$e61edea4dfe4ed9b","$82cbbbeb425d67d7$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$82cbbbeb425d67d7$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$82cbbbeb425d67d7$var$isPointerDraggingEvent","$83e85025105111b6$export$8dbdea330bbd6b3c","conditions","pass","$83e85025105111b6$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$83e85025105111b6$export$584a07df7b145c47","hasAttribute","activeElement","$83e85025105111b6$export$363947888fb85da6","$83e85025105111b6$export$a8612972eacfc116","$83e85025105111b6$export$9f5e19851eeaf2c1","$83e85025105111b6$export$1734dfcac3c09b2f","$83e85025105111b6$export$59c8376875f673f8","$83e85025105111b6$export$5bbcce8021828272","tagName","$83e85025105111b6$export$d31d3f3aa38542a8","pointerType","$83e85025105111b6$export$45cd27c0322d6513","isPrimary","$a42fdc6c339cab83$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a42fdc6c339cab83$var$__extends","centroid","$82cbbbeb425d67d7$exports","update","begin","getDistance","getAngle","centerpx","$9057ffe9f6806c34$export$9099ad97b570f7c","DragRotate","lastAngle_","$9057ffe9f6806c34$var$__extends","$6a5b5969cfd0314b$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$6a5b5969cfd0314b$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$66cbaf7779269f15$var$DragBoxEventType","$66cbaf7779269f15$export$4d9b552836937ca2","DragBoxEvent","$66cbaf7779269f15$var$__extends","$66cbaf7779269f15$export$9099ad97b570f7c","DragBox","box_","$6a5b5969cfd0314b$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$0da21c36fc8689b0$export$9099ad97b570f7c","DragZoom","out_","out","$0da21c36fc8689b0$var$__extends","factor","$66cbaf7779269f15$exports","$42a6230b71cef258$export$9099ad97b570f7c","$f6b95667a4c90ca6$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$f6b95667a4c90ca6$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$9eebcf690d0cc684$export$9099ad97b570f7c","KeyboardZoom","$9eebcf690d0cc684$var$__extends","charCode","charCodeAt","$f3f3e2bdc0486d9f$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$e4045b56fe7b53f8$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$e4045b56fe7b53f8$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$e4045b56fe7b53f8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$7569a186ce0b430a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$7569a186ce0b430a$var$__extends","rotationDelta","touch0","touch1","$916765f6a8929418$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$916765f6a8929418$var$__extends","scaleDelta","$fb244fe1c9d9d25f$export$9099ad97b570f7c","Map1","$d3f921aa5a285174$exports","zoomOptions","$f0a10ea98a6cb519$exports","rotateOptions","attribution","$72fd36fb1a212cd3$exports","attributionOptions","$b0b013c00d4892b9$export$b403fbac94228e09","altShiftDragRotate","$9057ffe9f6806c34$exports","doubleClickZoom","$787de85327c916bb$exports","zoomDelta","zoomDuration","dragPan","$a42fdc6c339cab83$exports","pinchRotate","$7569a186ce0b430a$exports","pinchZoom","$916765f6a8929418$exports","keyboard","$f6b95667a4c90ca6$exports","$9eebcf690d0cc684$exports","mouseWheelZoom","$e4045b56fe7b53f8$exports","shiftDragZoom","$0da21c36fc8689b0$exports","$6e4cba11d32981b8$export$b403fbac94228e09","$fb244fe1c9d9d25f$var$__extends","$a7bc897a99e1468c$exports","$3141486bef412326$exports","$326310a679f3ff3e$export$9099ad97b570f7c","TileLayer","$326310a679f3ff3e$var$__extends","$csqkG","$3iBUY","$2670773e9616adac$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$2670773e9616adac$var$__extends","getPreload","$8lvzi","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","$6138c5b4bdbde302$export$9099ad97b570f7c","$911c86a56b705ee0$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$5eNNf","$911c86a56b705ee0$var$__extends","isDrawableTile","getLayer","tileState","getTile","setState","getInterimTile","loadedTileCallback","tiles","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","layerExtent","tilePixelRatio","getTilePixelRatio","canvasExtent","tileRange","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","uid","tileCoord","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","useContainer","tempTransform","containerReused","clearRect","clipUnrotated","getContextOptions","preRender","clips","clipZs","currentClip","zs","Number","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","save","i_1","clip","beginPath","moveTo","lineTo","drawTileImage","restore","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","gutter","image","getTileImage","alpha","alphaChanged","globalAlpha","drawImage","endTransition","getImage","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$euTCT","$911c86a56b705ee0$export$9099ad97b570f7c","$a8df043d7f945436$export$9099ad97b570f7c","CanvasLayerRenderer","$a8df043d7f945436$var$__extends","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","getRenderTransform","renderPixel","newCanvas","newContext","getImageData","err","Uint8Array","$i2aKx","$d210c08aef54bfde$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$d210c08aef54bfde$var$__extends","forEachLoadedTile","$cEsMo","LOADED","renderIfReadyAndVisible","loadImage","imageState","ERROR","IDLE","$935f8b7a5b85bfe8$export$9099ad97b570f7c","LOADING","EMPTY","$3d04e27be03144b8$var$TileRange","TileRange","containsTileRange","getHeight","getWidth","$3d04e27be03144b8$export$ea8082d0226d35a5","$3d04e27be03144b8$export$9099ad97b570f7c","$beb310745d0018c3$var$Tile_1","parcelRequire","$8a7bf7ffc046ec6d$export$bd9c1867755cf54e","$8a7bf7ffc046ec6d$export$9099ad97b570f7c","OSM","url","attributionsCollapsible","imageSmoothing","opaque","reprojectionErrorThreshold","tileLoadFunction","wrapX","$8a7bf7ffc046ec6d$var$__extends","$lVVNV","$ff7bc28f591d2243$export$9099ad97b570f7c","XYZ","$igSFp","createXYZ","extentFromProjection","tileSize","tileUrlFunction","urls","$ff7bc28f591d2243$var$__extends","$7H3ev","$599f0e87b598536d$var$defaultTileLoadFunction","imageTile","$599f0e87b598536d$export$9099ad97b570f7c","TileImage","tileClass","$dExLe","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","contextOptions_","$df4KF","IMAGE_SMOOTHING_DISABLED","renderReprojectionEdges_","$599f0e87b598536d$var$__extends","$1Umfl","ENABLE_RASTER_REPROJECTION","tileCache","usedTileCache","getTileCacheForProjection","getGutter","JSON","stringify","thisProj","projKey","getForProjection","$jiR2B","highWaterMark","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","tileOptions","$gBkc8","containsKey","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","$c6fe8","z1","pixelRatio1","getTileInternal","interimTile","refreshInterimChain","getKeyZXY","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$5nfI4","$9f0932f8a34c2627$export$9099ad97b570f7c","ImageTile","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","$9f0932f8a34c2627$var$__extends","setImage","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","handleImageLoad_","naturalWidth","naturalHeight","$473wO","listenImage","$gz0bg","$c0f00e1ca40f5de0$export$9099ad97b570f7c","Tile","transition_","transitionStarts_","$c0f00e1ca40f5de0$var$__extends","release","getTileCoord","$2fea8d7b0a052aea$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","imageLoadFunction_","$2fea8d7b0a052aea$var$__extends","$8dQZg","$5fc8a3bf6573bb7d$export$9099ad97b570f7c","ImageBase","$5fc8a3bf6573bb7d$var$__extends","getPixelRatio","$8cf1db551f7c8651$export$9099ad97b570f7c","ReprojTile","targetProj","getTileFunction","opt_errorThreshold","opt_renderEdges","opt_contextOptions","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","$h8vAr","calculateSourceExtentResolution","isFinite","errorThresholdInPixels","ERROR_THRESHOLD","triangulation_","$gIcFQ","getTriangles","sourceExtent","calculateSourceExtent","sourceRange","srcX","srcY","$8cf1db551f7c8651$var$__extends","reproject_","sources","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$163c47192b558df9$export$b13dc73603ac3121","$163c47192b558df9$export$8d8dd84cf36b9041","$c2aa963399ff5087$export$9099ad97b570f7c","Triangulation","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","$c79baf82c906261e$var$brokenDiagonalRendering_","$c79baf82c906261e$var$drawTestTriangle","u1","v1","u2","v2","closePath","$c79baf82c906261e$var$verifyBrokenDiagonalRendering","$c79baf82c906261e$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","$c79baf82c906261e$export$ed73ddd0371d87e2","$c79baf82c906261e$export$792a797b69be0d58","triangulation","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$41189646474e5084$export$27dc5719ceda6735","$c79baf82c906261e$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$9a405cae94b418c1$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$e0d8d793f2458be2$export$9099ad97b570f7c","TileCache","$e0d8d793f2458be2$var$__extends","peekLast","pruneExceptNewestZ","peekFirstKey","fromKey","$hMQe0","$cf2f6e20b6b138a4$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","getValues","peekLastKey","$c15fc44d1077d497$export$ea8082d0226d35a5","opt_tileCoord","$c15fc44d1077d497$export$1039fb0288fd71e3","$c15fc44d1077d497$export$a0f0ccbe5bbc0789","$c15fc44d1077d497$export$5208a752d34424e5","$c15fc44d1077d497$export$4639c7f2947f4458","$c15fc44d1077d497$export$b46b80619528d4e5","getFullTileRange","$3e9b4960f3db4741$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","setUrls","setUrl","tileLoadingKeys_","$3e9b4960f3db4741$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$dq3ow","TILELOADSTART","TILELOADERROR","TILELOADEND","$7XUGo","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","setKey","$7GIbR","expandUrl","createFromTemplates","$9c50562c86c5e818$export$9099ad97b570f7c","$5cca03204735719f$var$TileSource","TileSource","opaque_","tilePixelRatio_","tmpSize","$5cca03204735719f$var$__extends","loaded","getTileGrid","opt_projection","withinExtentAndZ","refresh","$g2Q1r","$5cca03204735719f$export$8434c8db61edbf9d","$5cca03204735719f$export$9099ad97b570f7c","$bae52fc8280398fa$var$adaptAttributions","attributionLike","$bae52fc8280398fa$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","wrapX_","viewResolver","viewRejector","viewPromise_","reject","$bae52fc8280398fa$var$__extends","setAttributions","$d4d4204e000d87e1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$d4d4204e000d87e1$var$resolutionsFromExtent","$2urTB","origin","$d4d4204e000d87e1$export$57c49ef1657592d4","$d4d4204e000d87e1$export$9666e825b22d806d","$d4d4204e000d87e1$export$6dfef52f91d4f582","$d4d4204e000d87e1$export$5a0d9577a24f3c5b","$d4d4204e000d87e1$export$5731532c605ee56","xyzOptions","gridOptions","opt_maxResolution","half","$1d0405a55c5b390d$var$tmpTileCoord","$1d0405a55c5b390d$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","createOrUpdate","getOrigin","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","fullTileRanges","$598ebbe522bf4b2d$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$598ebbe522bf4b2d$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","hash","$598ebbe522bf4b2d$export$c6a04e0c49b28953","$598ebbe522bf4b2d$export$47abe479fba0e55d","exec","startCharCode","stopCharCode","fromCharCode","stop_1","$beb310745d0018c3$var$OSM_1","$fb244fe1c9d9d25f$exports"],"version":3,"file":"index.efe5f4c0.js.map"}