{"mappings":"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","sources":["node_modules/ol/src/events/EventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/TileState.js","node_modules/ol/src/util.js","node_modules/ol/src/easing.js","node_modules/ol/src/Tile.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/extent.js","node_modules/ol/src/events.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/source/State.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/size.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/transform.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/color.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/css.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","main.ts"],"sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the backgrlound color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMapInternal(map) {\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        equals(\n          asArray(target.style.backgroundColor),\n          asArray(opt_backgroundColor)\n        ))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      this.renderComplete_\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoading();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","import OSM from 'ol/source/OSM.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport { Map, View } from 'ol';\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"names":["$360d9a9621464d34$export$9099ad97b570f7c","$aa9447dea9a12a8f$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$175694b649fdbaa2$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$106eee51eb5027f3$export$8eda8fbd1364c8a1","a","b","$106eee51eb5027f3$export$45934da9231b7323","arr","direction","n","length","i","$106eee51eb5027f3$export$46e35401bc090c62","data","extension","Array","isArray","$106eee51eb5027f3$export$bcc761834e33d339","arr1","arr2","len1","$e8fe802d0684ce0f$export$ad8dd69aa6772cd0","$e8fe802d0684ce0f$export$5c50afa32081505e","$e8fe802d0684ce0f$export$3850addf0fb4e6a7","$b1c01449f6fb04fd$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$b1c01449f6fb04fd$export$97fff7491bd246bd","object","property","$b1c01449f6fb04fd$export$207c30846165e93a","values","push","$b1c01449f6fb04fd$export$988399e568471db1","$5871a677c2d47110$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$5871a677c2d47110$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$1eec589ef9f03c3a$export$9099ad97b570f7c","$abf34980d1562f58$export$18e1b4ff5b3c2297","Error","$abf34980d1562f58$var$uidCounter_","$abf34980d1562f58$export$604e9536b9e0488a","obj","ol_uid","String","$453e0f55adf2aa98$export$9fbc3b1d6b2da9ec","t","Math","pow","$453e0f55adf2aa98$export$673b9849e2bc032c","$453e0f55adf2aa98$export$1b5c1277e30d397d","$453e0f55adf2aa98$export$5523e35ab8ae283a","$150b5bd0bfcaba04$export$9099ad97b570f7c","Tile","tileCoord","state","opt_options","options","interimTile","transition_","transition","transitionStarts_","interpolate","$150b5bd0bfcaba04$var$__extends","changed","release","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","setState","load","getAlpha","id","time","start","delta","inTransition","endTransition","$5871a677c2d47110$exports","default","$2e5310563a29b6d9$var$ua","navigator","userAgent","toLowerCase","$2e5310563a29b6d9$export$543c908bf17a24fb","$2e5310563a29b6d9$export$bccc8605349feea7","$2e5310563a29b6d9$export$f16ffc71033a7aaa","$2e5310563a29b6d9$export$1940d5d2b4cf824d","devicePixelRatio","$2e5310563a29b6d9$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2e5310563a29b6d9$export$9544418e5c6fedfe","Image","decode","$2e5310563a29b6d9$export$700ce540937d8c69","passive","defineProperty","get","window","error","$e938c51870f186d7$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","document","createElement","width","height","getContext","$e938c51870f186d7$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$e938c51870f186d7$export$47503d53c08beb29","node","removeChild","$244f7fbdc76b1fe6$export$9099ad97b570f7c","ImageBase","extent","resolution","pixelRatio","pixelRatio_","$244f7fbdc76b1fe6$var$__extends","getExtent","getImage","getPixelRatio","getResolution","$2afaec311bc855ad$export$9099ad97b570f7c","$a6e2e0d6d016083d$export$9099ad97b570f7c","$a13b08ece8514024$export$9099ad97b570f7c","$4a6933b8a2a12a45$export$9099ad97b570f7c","AssertionError","code","message","split","name","$4a6933b8a2a12a45$var$__extends","$a93d7950106d9b94$export$b8795f4f643ce74f","assertion","errorCode","$4a6933b8a2a12a45$exports","$4b239fe5fbbd9442$export$a7ecbd362d65c1fe","coordinates","$4b239fe5fbbd9442$export$dbb3d72606cdc11","$4b239fe5fbbd9442$export$2852acc8f8b94686","$4b239fe5fbbd9442$export$c7d6a927f416dd39","x","y","dx","dy","$4b239fe5fbbd9442$export$c422a9fcb5f1ee5c","coordinate","$4b239fe5fbbd9442$export$cc70e7e516e4370f","$4b239fe5fbbd9442$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$4b239fe5fbbd9442$export$ea8082d0226d35a5","opt_extent","$4b239fe5fbbd9442$export$80741250c74fd4fa","$4b239fe5fbbd9442$export$bcc761834e33d339","extent1","extent2","$4b239fe5fbbd9442$export$4b116deb3079b147","flatCoordinates","offset","end","stride","$4b239fe5fbbd9442$export$8696fee511ea7c7a","min","max","$4b239fe5fbbd9442$export$c26f7b9c5adc34b4","callback","val","$4b239fe5fbbd9442$export$3932426cd8118930","$4b239fe5fbbd9442$export$4e2fc25ce97f3583","$4b239fe5fbbd9442$export$35aedeaeee8be6cd","$4b239fe5fbbd9442$export$5100f0815ea32995","$4b239fe5fbbd9442$export$ab4e37d31d15614d","area","$4b239fe5fbbd9442$export$988399e568471db1","$4b239fe5fbbd9442$export$3dc3550566517965","$4b239fe5fbbd9442$export$e178c8044d3d0a05","$4b239fe5fbbd9442$export$339e303bf205caae","$4b239fe5fbbd9442$export$38622892ed79bdc7","corner","$4b239fe5fbbd9442$export$3212225221d5bc14","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$4b239fe5fbbd9442$export$c491031eb9adcc3a","intersection","$4b239fe5fbbd9442$export$c3bd2c3b798b0350","$4b239fe5fbbd9442$export$76e02248c0889c3e","transformFn","opt_stops","xs","ys","l","apply","$4b239fe5fbbd9442$var$_boundingExtentXYs","$397f0f5ed9a3050c$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$397f0f5ed9a3050c$export$d2df825b2d8bc2ba","$397f0f5ed9a3050c$export$6dee5fd4fdf600ff","$9d0a6d02ef4dbef8$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","then","catch","forEach","ImageWrapper","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$9d0a6d02ef4dbef8$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$244f7fbdc76b1fe6$exports","$00b94bfd7801f3c8$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$00b94bfd7801f3c8$var$__extends","element","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$9d0a6d02ef4dbef8$exports","listenImage","$150b5bd0bfcaba04$exports","$9e10b55cc3e5aff2$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$9e10b55cc3e5aff2$export$af68584dedf5e52c","PI","$9e10b55cc3e5aff2$export$9099ad97b570f7c","$02080a5168d333d1$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$1cba8f77b2fc8147$export$4b8705656de00c72","value","$1cba8f77b2fc8147$export$4a376e0f60d976ee","cosh","exp","$1cba8f77b2fc8147$export$e08236045caaa3e1","log2","log","LOG2E","$1cba8f77b2fc8147$export$fd0b1e5ac4df516c","$1cba8f77b2fc8147$export$8b6706701cd75ea9","$1cba8f77b2fc8147$export$11468133b1231643","angleInRadians","$1cba8f77b2fc8147$export$4fc80c88d72f096","angleInDegrees","$1cba8f77b2fc8147$export$3334706ffb3dccb1","r","$1cba8f77b2fc8147$export$45ca8e7f50ccf2e0","$1cba8f77b2fc8147$export$3497369f53ce744c","decimals","factor","round","$1cba8f77b2fc8147$export$88807bfbd2f98762","floor","$1cba8f77b2fc8147$export$bc09dedfee4dad59","ceil","$4cdcea7942371c6e$export$bb1f4f75177e5528","$4cdcea7942371c6e$export$6fd015d56b8406c9","$4cdcea7942371c6e$export$64afaa717a0c4932","$4cdcea7942371c6e$export$2126dea64bc40b7b","tan","$4cdcea7942371c6e$var$EPSG3857Projection","EPSG3857Projection","point","$4cdcea7942371c6e$var$__extends","$4cdcea7942371c6e$export$850c9b527a5298aa","$4cdcea7942371c6e$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","slice","$4cdcea7942371c6e$export$f361696640082386","atan","$2bd0be18b84525d9$export$6fd015d56b8406c9","$2bd0be18b84525d9$export$af68584dedf5e52c","$2bd0be18b84525d9$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$2bd0be18b84525d9$var$__extends","$2bd0be18b84525d9$export$850c9b527a5298aa","$a9a5e0c6ca2e1695$var$cache","$53c818eff833bb4a$var$transforms","$53c818eff833bb4a$export$568ed88074851180","destination","sourceCode","destinationCode","$617763bc4bd20684$export$9099ad97b570f7c","$dcc53fed7252e62f$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$dcc53fed7252e62f$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$04466ada99459d91$export$bcc761834e33d339","coordinate1","coordinate2","equals","$04466ada99459d91$export$d40e2456b1281660","angle","cosAngle","sinAngle","$04466ada99459d91$export$c8ebaff90a21375a","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","sourceExtentWidth","$fa384abe43b1f395$export$3fbbaef54e2e9d28","$fa384abe43b1f395$export$678028d364072132","$fa384abe43b1f395$export$6308908a0016f099","$a9a5e0c6ca2e1695$export$568ed88074851180","$fa384abe43b1f395$export$7eb84799c931fe91","projectionLike","replace","$fa384abe43b1f395$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$fa384abe43b1f395$export$747af4f49bde2f53","vertices","$fa384abe43b1f395$export$a42db349809b0c24","projections","$fa384abe43b1f395$export$fd4cd3535c7ea97f","$fa384abe43b1f395$export$f704437a72056fb8","defaultCode","$fa384abe43b1f395$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","$53c818eff833bb4a$export$7eb84799c931fe91","$fa384abe43b1f395$export$9336879ef6599bf5","$fa384abe43b1f395$export$4b169b49e1a4823b","$fa384abe43b1f395$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$fa384abe43b1f395$var$userProjection","$fa384abe43b1f395$export$4a182a4d53d7595c","$fa384abe43b1f395$export$b5d00774755783fc","destProjection","$fa384abe43b1f395$export$f87215506b474b9e","$4cdcea7942371c6e$exports","PROJECTIONS","$2bd0be18b84525d9$exports","fromEPSG4326","toEPSG4326","$72092921cefc513c$var$brokenDiagonalRendering_","$8d02cc6e51329a90$export$9099ad97b570f7c","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$0cb8fe90b044c3b8$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$72092921cefc513c$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$72092921cefc513c$var$verifyBrokenDiagonalRendering","$72092921cefc513c$export$fbbff54b3c32db8d","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$72092921cefc513c$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","context","pixelRound","scale","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","mat","maxRow","maxEl","absValue","tmp","j","coef","k","m","$1cba8f77b2fc8147$export$27dc5719ceda6735","getImageData","$72092921cefc513c$var$isBrokenDiagonalRendering","ud","vd","step","steps","translate","strokeStyle","lineWidth","stroke","$938fa94ea91032bd$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$72092921cefc513c$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$938fa94ea91032bd$var$__extends","reproject_","z","getTileSize","leftToLoad_1","sourceListenKey_1","e","state1","unlistenSources_","setTimeout","$350327925a545431$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","clear","containsKey","f","entry","value_","key_","newer","older","remove","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","pop","set","setSize","$298e07180ebbc18c$export$ea8082d0226d35a5","opt_tileCoord","$298e07180ebbc18c$export$1039fb0288fd71e3","$298e07180ebbc18c$export$a0f0ccbe5bbc0789","$b8c0af040d9dc0fe$export$9099ad97b570f7c","TileCache","$b8c0af040d9dc0fe$var$__extends","expireCache","usedTiles","pruneExceptNewestZ","map","Number","$298e07180ebbc18c$export$5208a752d34424e5","$1e36dd0d5814997b$export$9099ad97b570f7c","$3dc3825e79de4e26$export$9099ad97b570f7c","$c022d33ed6bb5ca2$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c022d33ed6bb5ca2$var$__extends","getRevision","len","ol_key","$c022d33ed6bb5ca2$export$21f63b82add5980c","$c022d33ed6bb5ca2$export$9099ad97b570f7c","$8f7fdb7cfb75e879$export$b902cfd711fa7f06","ObjectEvent","oldValue","$8f7fdb7cfb75e879$var$__extends","$8f7fdb7cfb75e879$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$c022d33ed6bb5ca2$exports","$a979859450d27aab$export$9099ad97b570f7c","$2317568ccbc72da2$var$adaptAttributions","attributionLike","frameState","$2317568ccbc72da2$export$9099ad97b570f7c","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","Promise","resolve","reject","$2317568ccbc72da2$var$__extends","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getWrapX","getInterpolate","refresh","setAttributions","$8f7fdb7cfb75e879$exports","$848a86622bea988b$var$TileRange","TileRange","contains","containsXY","containsTileRange","tileRange","extend","getHeight","getSize","getWidth","intersects","$848a86622bea988b$export$ea8082d0226d35a5","$848a86622bea988b$export$9099ad97b570f7c","$3f0417c20d1cc4a3$export$c563c2b7121f8771","$3f0417c20d1cc4a3$export$48d31d2725e4d98b","opt_size","$ec3aa58fac71f355$var$tmpTileCoord","$ec3aa58fac71f355$export$9099ad97b570f7c","TileGrid","opt_strict","compare","zoomFactor","minZoom","resolutions_","resolutions","every","currentVal","res","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","jj","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getMaxZoom","getMinZoom","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","$cb780d18f7933e5c$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$cb780d18f7933e5c$var$resolutionsFromExtent","$cb780d18f7933e5c$export$57c49ef1657592d4","$cb780d18f7933e5c$export$9666e825b22d806d","$cb780d18f7933e5c$export$6dfef52f91d4f582","opt_maxResolution","maxResolution","half","$824311a81ea848b7$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$b8c0af040d9dc0fe$exports","cacheSize","tmpSize","tileOptions","zDirection","$824311a81ea848b7$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","ratio","getTileCoordForTileUrlFunction","opt_projection","worldWidth","$cb780d18f7933e5c$export$5a0d9577a24f3c5b","$298e07180ebbc18c$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$2317568ccbc72da2$exports","$824311a81ea848b7$export$8434c8db61edbf9d","TileSourceEvent","$824311a81ea848b7$export$9099ad97b570f7c","$88df26af4a8f1ef6$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","$88df26af4a8f1ef6$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$298e07180ebbc18c$export$4639c7f2947f4458","$88df26af4a8f1ef6$export$c6a04e0c49b28953","$1dbd919805fd1d18$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$1dbd919805fd1d18$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","$824311a81ea848b7$exports","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","$88df26af4a8f1ef6$export$47abe479fba0e55d","join","$505aa269794a499f$var$defaultTileLoadFunction","imageTile","$505aa269794a499f$export$9099ad97b570f7c","TileImage","imageSmoothing","tileClass","$00b94bfd7801f3c8$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$505aa269794a499f$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","cache","newTile","$938fa94ea91032bd$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","$1dbd919805fd1d18$exports","$72436993edd2ca04$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$cb780d18f7933e5c$export$5731532c605ee56","$72436993edd2ca04$var$__extends","$505aa269794a499f$exports","$e418fa376f25023c$export$bd9c1867755cf54e","$e418fa376f25023c$export$9099ad97b570f7c","OSM","$e418fa376f25023c$var$__extends","$72436993edd2ca04$exports","$b20feb8964318d3f$export$9099ad97b570f7c","$a91eb7d9c06d6003$export$9099ad97b570f7c","BaseLayer","background_","background","properties","opacity","visible","zIndex","minResolution","className_","className","$a91eb7d9c06d6003$var$__extends","getBackground","getClassName","getLayerState","opt_managed","layer","managed","getZIndex","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getLayersArray","opt_array","getLayerStatesArray","opt_states","setBackground","opt_background","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$782b75247205ab14$export$9099ad97b570f7c","$c8891acc328b159c$export$16970faadcd3f29b","layerState","viewState","$c8891acc328b159c$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","handleSourcePropertyChange_","setSource","$c8891acc328b159c$var$__extends","array","states","getSource","handleSourceChange_","getFeatures","pixel","layerRenderer","getRenderer","prepareFrame","renderFrame","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$a91eb7d9c06d6003$exports","$d9384f01d604a2a6$export$9099ad97b570f7c","$87fb90d07b93a774$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$87fb90d07b93a774$var$__extends","getPreload","getUseInterimTilesOnError","$c8891acc328b159c$exports","$7971363be443bf07$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$7971363be443bf07$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","$ea4701d35a7bcfcb$var$transformStringDiv","$ffba12b1b1caac35$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$ffba12b1b1caac35$var$__extends","$ea4701d35a7bcfcb$export$6af9bbf310c9e4bf","$ea4701d35a7bcfcb$export$452ae967caf14641","dx1","dy1","sx","sy","dx2","dy2","$ea4701d35a7bcfcb$export$6e6aac0f60e83c70","det","$ea4701d35a7bcfcb$export$47bee913e0e80eb4","transformString","style","$4a3eb4cf07e68bcb$var$HEX_COLOR_RE_","$4a3eb4cf07e68bcb$var$NAMED_COLOR_RE_","$4a3eb4cf07e68bcb$export$9fe004474d6f7f65","color","g","$4a3eb4cf07e68bcb$export$47bee913e0e80eb4","$4a3eb4cf07e68bcb$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","$4a3eb4cf07e68bcb$export$21528ce64591bf2","s","hasAlpha","substr","$4a3eb4cf07e68bcb$export$2e33abec8aecd572","$4a3eb4cf07e68bcb$var$fromStringInternal_","$4a3eb4cf07e68bcb$export$7266a24c0caa2a8","$d3c91b778f21fae8$export$9099ad97b570f7c","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$d3c91b778f21fae8$var$__extends","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","position","left","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","event_1","$ffba12b1b1caac35$exports","preRender","postRender","getRenderTransform","offsetX","renderPixel","layerExtent","pixelToCoordinateTransform","pixelContext","pixelCanvas","clearRect","err","Uint8Array","$7971363be443bf07$exports","$eb83c055c71b92dc$var$fontRegEx","RegExp","$eb83c055c71b92dc$var$fontRegExMatchIndex","$eb83c055c71b92dc$export$b705256ab57c20ca","fontSpec","lineHeight","weight","variant","families","family","$0704a0db83121540$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$0704a0db83121540$var$__extends","isDrawableTile","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","tileResolution","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","sort","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","w","h","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","$eb83c055c71b92dc$export$e04cd5eb7e7428c6","getTileImage","alpha","alphaChanged","globalAlpha","animate","postRenderFunction","tileSource1","frameState1","tileSourceKey","postRenderFunctions","opt_tileCallback","wantedTiles","tileQueue","isKeyQueued","enqueue","$d3c91b778f21fae8$exports","$0704a0db83121540$export$9099ad97b570f7c","$adffffba3f1e99ac$export$9099ad97b570f7c","TileLayer","$adffffba3f1e99ac$var$__extends","$0704a0db83121540$exports","$87fb90d07b93a774$exports","$e2ca19531263975f$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","$e2ca19531263975f$var$getKey","maxCacheSize","$e2ca19531263975f$export$601b9e2be44c7cb2","$23233cffd63dbe95$var$expireIconCache","$23233cffd63dbe95$export$9099ad97b570f7c","MapRenderer","map_","$23233cffd63dbe95$var$__extends","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","$04466ada99459d91$export$5a0d9577a24f3c5b","offsets","layerStates","numLayers","tmpCoord","inView","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","$3f8842a01a05d29f$export$907cf5cff4a8acb1","console","warn","$3f8842a01a05d29f$var$measureFont","$3f8842a01a05d29f$var$measureContext","$3f8842a01a05d29f$export$384c0f09c94ed6cc","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3f8842a01a05d29f$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","$3f8842a01a05d29f$var$measureText","measureText","$de107509ffcc1e1e$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$eb83c055c71b92dc$export$2fbf9d496fb0d5a8","getViewport","insertBefore","firstChild","children_","renderedVisible_","$de107509ffcc1e1e$var$__extends","declutterLayers","previousElement","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$e938c51870f186d7$export$439ebc2b0f0ec9f4","display","$23233cffd63dbe95$exports","$b22fe65cc2091c4a$export$9099ad97b570f7c","$c8bee1b3aeb9d79e$var$Property","$c8bee1b3aeb9d79e$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$c8bee1b3aeb9d79e$var$__extends","$c8bee1b3aeb9d79e$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","item","insertAt","elem","removeAt","setAt","opt_except","$3bf57b305f2befe1$export$88ab4fe370923b6f","GroupEvent","$3bf57b305f2befe1$var$__extends","$3bf57b305f2befe1$var$Property","$3bf57b305f2befe1$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$c8bee1b3aeb9d79e$exports","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$cd0dc31bb7f07bd8$export$9099ad97b570f7c","MapEvent","$cd0dc31bb7f07bd8$var$__extends","$d4f51dc221fadaed$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$d4f51dc221fadaed$var$__extends","getEventPixel","getCoordinateFromPixel","$cd0dc31bb7f07bd8$exports","$a406e3695e3399d9$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a69469b84400a522$export$9099ad97b570f7c","$85c0a5b12bf0966d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$85c0a5b12bf0966d$var$__extends","emulateClick_","pointerEvent","newEvent","$d4f51dc221fadaed$exports","clearTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$9dc1c4328cbd3b30$export$9099ad97b570f7c","$a2f92f24bac5651c$export$9099ad97b570f7c","$9ea30a2172af1cde$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$5e7cdcfae3171aaa$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$5e7cdcfae3171aaa$var$__extends","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$5e7cdcfae3171aaa$export$f7de9366327711a7","tileCenter","deltaX","deltaY","$2856fbf609c8d5d1$export$9099ad97b570f7c","$8b00b5310669c7ed$export$9099ad97b570f7c","CENTER","RESOLUTION","ROTATION","$00d39586d2dd894f$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$00d39586d2dd894f$export$eaafe0fae18e32b1","$e1ddb1e9ae31ae02$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e1ddb1e9ae31ae02$var$getSmoothClampedResolution","$e1ddb1e9ae31ae02$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$a18de7eaf14a0b33$export$e97ec87d2336bd4e","$a18de7eaf14a0b33$export$eaafe0fae18e32b1","$adef5d18c3ab54fd$export$9099ad97b570f7c","$49a9dfb608ce5f95$export$92106241c01aa541","opt_dest","dest","$ba41d9b80f779606$var$tmpTransform","$ba41d9b80f779606$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$ba41d9b80f779606$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$4b239fe5fbbd9442$export$d1e01ccfd06bf8ee","rotate","anchor","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$7e268a797fd34dbd$export$2a65008b73824080","layout","$7e268a797fd34dbd$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$7e268a797fd34dbd$export$9099ad97b570f7c","SimpleGeometry","$7e268a797fd34dbd$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$7e268a797fd34dbd$var$getLayoutForStride","anchorX","anchorY","$49a9dfb608ce5f95$export$d40e2456b1281660","$49a9dfb608ce5f95$export$8f869025bba9609b","$49a9dfb608ce5f95$export$41b0d7466cde8385","$ba41d9b80f779606$exports","$40f507b383da395e$var$assignClosest","offset1","offset2","$40f507b383da395e$export$acf7548d1f0e8581","squaredDelta","$40f507b383da395e$export$ba38095f6bb45df2","ends","$40f507b383da395e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$40f507b383da395e$export$3dd3914e22f9012e","$6cb5b4913a2f0936$export$e175f505890ac90f","$6cb5b4913a2f0936$export$ab1a51db55485752","coordinatess","opt_ends","$d043153e418ded33$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$d043153e418ded33$export$383ea8a1f2974dfb","$d043153e418ded33$export$e29de4fdb2175738","$d043153e418ded33$export$1df19a1eb5514c2f","simplifiedEnds","$3185dd1b8645ed57$export$92f32d891164b0ac","opt_coordinates","$3185dd1b8645ed57$export$d82a8a3167f968d","opt_coordinatess","$40a616a92c640fdd$export$9bf2059fd656d5e9","twiceArea","$40a616a92c640fdd$export$99cb92d00fd73c87","$43c0695b48c31937$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$43c0695b48c31937$var$__extends","getArea","$7e268a797fd34dbd$exports","$fd187036c4ad2ec2$export$9099ad97b570f7c","Point","$fd187036c4ad2ec2$var$__extends","$6cb5b4913a2f0936$export$a53e62528b652807","$7b5592c4b91a07ed$export$f7b55b637f92fd7","$7b5592c4b91a07ed$export$e2ed757909b25f63","wn","$7b5592c4b91a07ed$export$51e46a3625992b91","$b9b67588a55982e7$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$76e31ee9dbbe302d$export$26f047a5bfac4b1a","coordinatesExtent","ret","$1c34f05d540d121d$export$40f3d9558cf6e846","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","$4b239fe5fbbd9442$export$525a75abb91115e3","$76e31ee9dbbe302d$export$717c2c7c46a5bf3d","$76e31ee9dbbe302d$export$f14bd9270666b480","$32fb60cc2618c78c$export$c77fe031a1447f2e","$ee95668e612b360f$export$add61ad31d0a68b4","edge","$ee95668e612b360f$export$586adaf930d9fdb6","opt_right","right","isClockwise","$ee95668e612b360f$export$325e57738fd8b321","$67ee9fdd559ae60e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$67ee9fdd559ae60e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$fd187036c4ad2ec2$exports","getLinearRingCount","getLinearRing","$43c0695b48c31937$exports","getLinearRings","linearRings","$67ee9fdd559ae60e$export$9099ad97b570f7c","$67ee9fdd559ae60e$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$67ee9fdd559ae60e$export$b50d271c6e9656cd","$67ee9fdd559ae60e$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$67ee9fdd559ae60e$export$5d1798f0e1df079","getRadius","startAngle","$4d09fd224bce9aac$var$animationCallback","returnValue","$4d09fd224bce9aac$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d09fd224bce9aac$export$8b6914b45b83f21f","resolutionConstraint","smoothResolutionConstraint","projExtent","constrainResolution","capped","$e1ddb1e9ae31ae02$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$e1ddb1e9ae31ae02$export$7690ad4e930f454b","constraint","$4d09fd224bce9aac$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d09fd224bce9aac$export$5d87c27d7d9f380e","animation","sourceRotation","targetRotation","$4d09fd224bce9aac$var$calculateCenterOn","rotX","rotY","$4d09fd224bce9aac$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$4d09fd224bce9aac$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$fa384abe43b1f395$export$a7d473ff80a6a3b","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$67ee9fdd559ae60e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","targetRes","$7f90c67a94ff7584$var$removeLayerMapProperty","$3bf57b305f2befe1$exports","$7f90c67a94ff7584$var$setLayerMapProperty","$7f90c67a94ff7584$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$4d09fd224bce9aac$exports","$7f90c67a94ff7584$var$createOptionsInternal","renderComplete_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$5e7cdcfae3171aaa$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","$7f90c67a94ff7584$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getOverlayById","group","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","handlePostRender","hints","viewHints","lowOnFrameBudget","$85c0a5b12bf0966d$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","$8f4a601d9be32279$export$9099ad97b570f7c","Control","target_","$8f4a601d9be32279$var$__extends","mapEvent","$061c199bdbf67255$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$061c199bdbf67255$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","$e938c51870f186d7$export$f0994cfd84ab1152","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8f4a601d9be32279$exports","$c0271bd4f0f131b5$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$c0271bd4f0f131b5$var$__extends","resetNorth_","$a099fe81d7933b1b$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$a099fe81d7933b1b$var$__extends","zoomByDelta_","currentZoom","newZoom","$9b8240cd930c7251$export$9099ad97b570f7c","$cc7ed3d15f79f09e$export$63568b31cb17dd4d","$cc7ed3d15f79f09e$export$d2c07614bfd6a817","$cc7ed3d15f79f09e$export$9099ad97b570f7c","Interaction","setActive","$cc7ed3d15f79f09e$var$__extends","active","$05d04f741d9f44ea$export$9099ad97b570f7c","DoubleClickZoom","delta_","$05d04f741d9f44ea$var$__extends","stopEvent","shiftKey","$cc7ed3d15f79f09e$exports","zoomByDelta","$4e21594aff042ad9$export$e61edea4dfe4ed9b","$4e21594aff042ad9$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$4e21594aff042ad9$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$4e21594aff042ad9$var$isPointerDraggingEvent","$719344b2915a5282$export$8dbdea330bbd6b3c","conditions","pass","$719344b2915a5282$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$719344b2915a5282$export$584a07df7b145c47","hasAttribute","activeElement","$719344b2915a5282$export$363947888fb85da6","$719344b2915a5282$export$a8612972eacfc116","$719344b2915a5282$export$9f5e19851eeaf2c1","$719344b2915a5282$export$1734dfcac3c09b2f","$719344b2915a5282$export$59c8376875f673f8","$719344b2915a5282$export$5bbcce8021828272","tagName","$719344b2915a5282$export$d31d3f3aa38542a8","pointerType","$719344b2915a5282$export$45cd27c0322d6513","isPrimary","$30483e29507706cc$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$30483e29507706cc$var$__extends","centroid","$4e21594aff042ad9$exports","update","begin","getDistance","getAngle","centerpx","$fba38e1bcb241519$export$9099ad97b570f7c","DragRotate","lastAngle_","$fba38e1bcb241519$var$__extends","$aceb96e89d56f634$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$aceb96e89d56f634$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$20cb6644c41e6461$var$DragBoxEventType","$20cb6644c41e6461$export$4d9b552836937ca2","DragBoxEvent","$20cb6644c41e6461$var$__extends","$20cb6644c41e6461$export$9099ad97b570f7c","DragBox","box_","$aceb96e89d56f634$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$c82213a35099ea60$export$9099ad97b570f7c","DragZoom","out_","out","$c82213a35099ea60$var$__extends","$20cb6644c41e6461$exports","$b33346ced3ffa1bb$export$9099ad97b570f7c","$a55d85978dd11fe1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$a55d85978dd11fe1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$231d0cdbd522b255$export$9099ad97b570f7c","KeyboardZoom","$231d0cdbd522b255$var$__extends","$49ab15a508fcdc65$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$3750bcddcbf4c872$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$3750bcddcbf4c872$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$3750bcddcbf4c872$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6a2e253f5cb0bc62$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$6a2e253f5cb0bc62$var$__extends","rotationDelta","touch0","touch1","$9dd5b3aa2e054d06$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$9dd5b3aa2e054d06$var$__extends","scaleDelta","$a9d71ecad6ede6f8$export$9099ad97b570f7c","Map1","$a099fe81d7933b1b$exports","zoomOptions","$c0271bd4f0f131b5$exports","rotateOptions","attribution","$061c199bdbf67255$exports","attributionOptions","$070ebaa1cd5f7208$export$b403fbac94228e09","altShiftDragRotate","$fba38e1bcb241519$exports","doubleClickZoom","$05d04f741d9f44ea$exports","zoomDelta","zoomDuration","dragPan","$30483e29507706cc$exports","pinchRotate","$6a2e253f5cb0bc62$exports","pinchZoom","$9dd5b3aa2e054d06$exports","keyboard","$a55d85978dd11fe1$exports","$231d0cdbd522b255$exports","mouseWheelZoom","$3750bcddcbf4c872$exports","shiftDragZoom","$c82213a35099ea60$exports","$7251b9d3abaab321$export$b403fbac94228e09","$a9d71ecad6ede6f8$var$__extends","$de107509ffcc1e1e$exports","$7f90c67a94ff7584$exports","$a9d71ecad6ede6f8$exports","$adffffba3f1e99ac$exports","$e418fa376f25023c$exports"],"version":3,"file":"index.b8e994d6.js.map"}