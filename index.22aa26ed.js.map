{"mappings":"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","sources":["node_modules/ol/events/EventType.js","node_modules/ol/Disposable.js","node_modules/ol/events/Event.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/TileState.js","node_modules/ol/util.js","node_modules/ol/easing.js","node_modules/ol/Tile.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/ImageState.js","node_modules/ol/events.js","node_modules/ol/ImageTile.js","node_modules/ol/Image.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/asserts.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/source/TileEventType.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/source/Source.js","node_modules/ol/TileRange.js","node_modules/ol/tilegrid/common.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/size.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/OSM.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/transform.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/color.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/renderer/Map.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/Map.js","main.ts","node_modules/ol/control/defaults.js","node_modules/ol/interaction/defaults.js"],"sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.0.0';\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","import OSM from 'ol/source/OSM.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport { Map, View } from 'ol';\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n"],"names":["$1f1034d6043b657b$export$9099ad97b570f7c","$664ea55fc19a08b3$export$9099ad97b570f7c","this","disposed","dispose","disposeInternal","$69c59045833c3003$export$9099ad97b570f7c","constructor","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$31189420a57baeba$export$235915d17ff56858","a","b","$31189420a57baeba$export$45934da9231b7323","arr","direction","n","length","i","candidate","$31189420a57baeba$export$46e35401bc090c62","data","extension","Array","isArray","$31189420a57baeba$export$bcc761834e33d339","arr1","arr2","len1","$351d82b0a78a5705$export$ad8dd69aa6772cd0","$351d82b0a78a5705$export$5c50afa32081505e","$351d82b0a78a5705$export$3850addf0fb4e6a7","$43f7a9f222abbea0$export$97fff7491bd246bd","object","property","$43f7a9f222abbea0$export$988399e568471db1","$ad3de02656425e16$export$9099ad97b570f7c","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","$64b89b0b3d0b4cba$export$9099ad97b570f7c","$e14829ca1f519173$export$18e1b4ff5b3c2297","Error","$e14829ca1f519173$var$uidCounter_","$e14829ca1f519173$export$604e9536b9e0488a","obj","ol_uid","String","$d316f2294d12f14b$export$9fbc3b1d6b2da9ec","t","Math","pow","$d316f2294d12f14b$export$673b9849e2bc032c","$d316f2294d12f14b$export$1b5c1277e30d397d","$d316f2294d12f14b$export$5523e35ab8ae283a","$c0f00e1ca40f5de0$export$9099ad97b570f7c","tileCoord","state1","options","state","interimTile","key","transition_","transition","transitionStarts_","interpolate","changed","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","$527d7f7180afe02d$var$ua","navigator","userAgent","toLowerCase","$527d7f7180afe02d$export$543c908bf17a24fb","$527d7f7180afe02d$export$bccc8605349feea7","test","$527d7f7180afe02d$export$f16ffc71033a7aaa","$527d7f7180afe02d$export$1940d5d2b4cf824d","devicePixelRatio","$527d7f7180afe02d$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$527d7f7180afe02d$export$9544418e5c6fedfe","Image","prototype","decode","$527d7f7180afe02d$export$700ce540937d8c69","passive","defineProperty","get","window","error","$1999371b8a7a6e92$export$fe55455cced7aebb","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","$1999371b8a7a6e92$export$66cdde09c617964d","context","clearRect","$1999371b8a7a6e92$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$1999371b8a7a6e92$export$47503d53c08beb29","node","removeChild","$935f8b7a5b85bfe8$export$9099ad97b570f7c","$56a06269a268820b$export$ff95bcce2965a200","thisArg","once","bind","originalListener","apply","arguments","eventsKey","$56a06269a268820b$export$d2df825b2d8bc2ba","$56a06269a268820b$export$6dee5fd4fdf600ff","$9f0932f8a34c2627$export$9099ad97b570f7c","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","element","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","$9f0932f8a34c2627$var$getBlankImage","handleImageLoad_","image","naturalWidth","naturalHeight","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","forEach","$2fea8d7b0a052aea$export$469eb8ba3f45955e","$9b4dc89090328257$export$9099ad97b570f7c","$6979b253edf31824$export$a7ecbd362d65c1fe","coordinates","extent","$6979b253edf31824$export$dbb3d72606cdc11","$6979b253edf31824$export$2852acc8f8b94686","$6979b253edf31824$export$c7d6a927f416dd39","x","y","dx","dy","$6979b253edf31824$export$c422a9fcb5f1ee5c","coordinate","$6979b253edf31824$export$cc70e7e516e4370f","$6979b253edf31824$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$6979b253edf31824$export$ea8082d0226d35a5","dest","$6979b253edf31824$export$80741250c74fd4fa","$6979b253edf31824$export$bcc761834e33d339","extent1","extent2","$6979b253edf31824$export$4b116deb3079b147","flatCoordinates","offset","end","stride","$6979b253edf31824$export$8696fee511ea7c7a","min","max","$6979b253edf31824$export$c26f7b9c5adc34b4","callback","val","$6979b253edf31824$export$3932426cd8118930","$6979b253edf31824$export$4e2fc25ce97f3583","$6979b253edf31824$export$35aedeaeee8be6cd","$6979b253edf31824$export$5100f0815ea32995","$6979b253edf31824$export$ab4e37d31d15614d","area","$6979b253edf31824$export$988399e568471db1","$6979b253edf31824$export$3dc3550566517965","$6979b253edf31824$export$e178c8044d3d0a05","$6979b253edf31824$export$339e303bf205caae","$6979b253edf31824$export$38622892ed79bdc7","corner","$6979b253edf31824$export$3212225221d5bc14","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","$6979b253edf31824$export$eaa5fa57bd4e25f6","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","$6979b253edf31824$export$c491031eb9adcc3a","intersection","$6979b253edf31824$export$c3bd2c3b798b0350","$6979b253edf31824$export$76e02248c0889c3e","transformFn","stops","xs","ys","l","$6979b253edf31824$var$_boundingExtentXYs","$c9c507281fcc3891$export$af68584dedf5e52c","PI","$c524398f6723d704$export$9099ad97b570f7c","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7f3701aa8bdb506a$export$8c5f77743cd0e8b7","$7f3701aa8bdb506a$export$bb1f4f75177e5528","$7f3701aa8bdb506a$export$6fd015d56b8406c9","$7f3701aa8bdb506a$export$64afaa717a0c4932","$7f3701aa8bdb506a$export$2126dea64bc40b7b","log","tan","$7f3701aa8bdb506a$var$EPSG3857Projection","point","cosh","$7f3701aa8bdb506a$export$850c9b527a5298aa","$7f3701aa8bdb506a$export$128bedc7a8a0ae2c","input","output","dimension","slice","$7f3701aa8bdb506a$export$f361696640082386","atan","exp","$9fa231a87381e908$export$6fd015d56b8406c9","$9fa231a87381e908$export$af68584dedf5e52c","$9fa231a87381e908$var$EPSG4326Projection","$9fa231a87381e908$export$850c9b527a5298aa","$b355c55a4bde1b89$var$cache","$57e7e4423e192b2f$var$transforms","$57e7e4423e192b2f$export$568ed88074851180","source","destination","sourceCode","destinationCode","$41189646474e5084$export$4b8705656de00c72","value","$41189646474e5084$export$fd0b1e5ac4df516c","$41189646474e5084$export$8b6706701cd75ea9","$41189646474e5084$export$4fc80c88d72f096","angleInDegrees","$41189646474e5084$export$3334706ffb3dccb1","r","$41189646474e5084$export$45ca8e7f50ccf2e0","$41189646474e5084$export$3497369f53ce744c","decimals","factor","round","$41189646474e5084$export$88807bfbd2f98762","floor","$41189646474e5084$export$bc09dedfee4dad59","ceil","$3b0bd531a043cbd1$export$bcc761834e33d339","coordinate1","coordinate2","equals","$3b0bd531a043cbd1$export$d40e2456b1281660","angle","cosAngle","sinAngle","$3b0bd531a043cbd1$export$c8ebaff90a21375a","projection","sourceExtentWidth","projectionExtent","worldsAway","$1a993eb37fc0a4e5$export$761de677acb0d085","$1a993eb37fc0a4e5$export$aec7b6756585c081","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$fd75aeaccc88805d$var$levels","info","warn","none","$fd75aeaccc88805d$var$level","$fd75aeaccc88805d$export$5db1af49deb5cdf6","args","console","$e9b048d51236bbbc$var$showCoordinateWarning","$e9b048d51236bbbc$export$95cd20be0944d6c1","disable","$e9b048d51236bbbc$export$3fbbaef54e2e9d28","$e9b048d51236bbbc$export$678028d364072132","$e9b048d51236bbbc$export$6308908a0016f099","$b355c55a4bde1b89$export$568ed88074851180","$e9b048d51236bbbc$export$7eb84799c931fe91","projectionLike","replace","$e9b048d51236bbbc$export$75cdc5d556e3d9b2","pointResolution","getter","projUnits","toEPSG4326","$e9b048d51236bbbc$export$747af4f49bde2f53","vertices","$e9b048d51236bbbc$export$a42db349809b0c24","projections","$e9b048d51236bbbc$export$fd4cd3535c7ea97f","$e9b048d51236bbbc$export$f704437a72056fb8","defaultCode","$e9b048d51236bbbc$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","$57e7e4423e192b2f$export$7eb84799c931fe91","$e9b048d51236bbbc$export$9336879ef6599bf5","$e9b048d51236bbbc$export$4b169b49e1a4823b","$e9b048d51236bbbc$export$f2a2f51d8aa8d6b0","$e9b048d51236bbbc$var$userProjection","$e9b048d51236bbbc$export$4a182a4d53d7595c","$e9b048d51236bbbc$export$b5d00774755783fc","destProjection","$e9b048d51236bbbc$export$f87215506b474b9e","projections2","forwardTransform","inverseTransform","$c2aa963399ff5087$export$9099ad97b570f7c","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision1","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$c79baf82c906261e$var$brokenDiagonalRendering_","$c79baf82c906261e$export$859d51369429a63b","$c79baf82c906261e$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$c79baf82c906261e$var$verifyBrokenDiagonalRendering","$c79baf82c906261e$export$fbbff54b3c32db8d","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$c79baf82c906261e$export$792a797b69be0d58","pixelRatio","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","scale","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","mat","maxRow","maxEl","absValue","tmp","j","coef","k","m","$41189646474e5084$export$27dc5719ceda6735","getImageData","$c79baf82c906261e$var$isBrokenDiagonalRendering","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","$8cf1db551f7c8651$export$9099ad97b570f7c","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","getResolution","$c79baf82c906261e$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","z","getTileSize","targetResolution1","sourceResolution1","targetExtent1","leftToLoad","sourceListenKey","e","unlistenSources_","setTimeout","$9531785aa63836ff$export$b8795f4f643ce74f","assertion","errorMessage","$cf2f6e20b6b138a4$export$9099ad97b570f7c","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","clear","containsKey","hasOwnProperty","f","entry","value_","key_","newer","older","remove","getKeys","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","set","setSize","$c15fc44d1077d497$export$ea8082d0226d35a5","$c15fc44d1077d497$export$1039fb0288fd71e3","$c15fc44d1077d497$export$a0f0ccbe5bbc0789","$e0d8d793f2458be2$export$9099ad97b570f7c","usedTiles","pruneExceptNewestZ","split","map","Number","$c15fc44d1077d497$export$5208a752d34424e5","$9c50562c86c5e818$export$9099ad97b570f7c","$78afe97655c173a4$export$9099ad97b570f7c","$63adf90947e79212$var$Observable","on","onInternal","onceInternal","un","unInternal","revision_","getRevision","len","ol_key","$63adf90947e79212$export$21f63b82add5980c","$63adf90947e79212$export$9099ad97b570f7c","$9403ba232d3d3401$export$b902cfd711fa7f06","key1","oldValue1","oldValue","$9403ba232d3d3401$export$9099ad97b570f7c","values1","values_","setProperties","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","silent","oldValue2","key2","applyProperties","unset","$bae52fc8280398fa$var$adaptAttributions","attributionLike","frameState","$bae52fc8280398fa$export$9099ad97b570f7c","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","Promise","resolve","reject","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getWrapX","getInterpolate","refresh","setAttributions","$3d04e27be03144b8$var$TileRange","contains","containsXY","containsTileRange","tileRange","extend","getHeight","getSize","getWidth","intersects","$3d04e27be03144b8$export$ea8082d0226d35a5","minX1","maxX1","minY1","maxY1","$3d04e27be03144b8$export$9099ad97b570f7c","$86e550413146b27c$export$6c563273fc39e165","$d0ff7551bd225db7$export$f7b55b637f92fd7","$d0ff7551bd225db7$export$e2ed757909b25f63","wn","$d0ff7551bd225db7$export$51e46a3625992b91","ends","$3f240441e8158030$export$26f047a5bfac4b1a","coordinatesExtent","ret","$453f0f3786b8ff29$export$40f3d9558cf6e846","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","$6979b253edf31824$export$525a75abb91115e3","$3f240441e8158030$export$f14bd9270666b480","$3f240441e8158030$export$717c2c7c46a5bf3d","$25e118ccc56a5e21$export$c563c2b7121f8771","$25e118ccc56a5e21$export$48d31d2725e4d98b","$1d0405a55c5b390d$var$tmpTileCoord","$1d0405a55c5b390d$export$9099ad97b570f7c","zoomFactor","minZoom","resolutions_","resolutions","strict","compare","every","currentVal","res","$31189420a57baeba$export$fd1d1d368f0c3e6f","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","i1","ii1","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getMaxZoom","getMinZoom","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","$d4d4204e000d87e1$export$115502f69f929231","$d4d4204e000d87e1$var$resolutionsFromExtent","$d4d4204e000d87e1$export$57c49ef1657592d4","$d4d4204e000d87e1$export$9666e825b22d806d","$d4d4204e000d87e1$export$6dfef52f91d4f582","maxResolution","half","degrees","$5cca03204735719f$export$8434c8db61edbf9d","$5cca03204735719f$export$9099ad97b570f7c","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","cacheSize","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","tileSize1","ratio","getTileCoordForTileUrlFunction","worldWidth","$d4d4204e000d87e1$export$5a0d9577a24f3c5b","$c15fc44d1077d497$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$598ebbe522bf4b2d$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","$598ebbe522bf4b2d$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c15fc44d1077d497$export$4639c7f2947f4458","$598ebbe522bf4b2d$export$c6a04e0c49b28953","$3e9b4960f3db4741$var$UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","parseInt","$598ebbe522bf4b2d$export$47abe479fba0e55d","join","$3e9b4960f3db4741$export$9099ad97b570f7c","$599f0e87b598536d$var$defaultTileLoadFunction","imageTile","$599f0e87b598536d$export$9099ad97b570f7c","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","cache","newTile","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","$ff7bc28f591d2243$export$9099ad97b570f7c","xyzOptions","gridOptions","$d4d4204e000d87e1$export$5731532c605ee56","$8a7bf7ffc046ec6d$export$9099ad97b570f7c","$af9ac451f9e710c1$export$9099ad97b570f7c","$5bc06fc72e60a1e5$export$9099ad97b570f7c","background_","background","properties","opacity","visible","zIndex","minResolution","className_","className","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$89b1d20a080b27f0$export$9099ad97b570f7c","$69221d06b0113aff$export$9099ad97b570f7c","$8d321ccd3e128174$export$9099ad97b570f7c","CENTER","RESOLUTION","ROTATION","$5b15465d65b208f9$export$33d0cf822839cfa8","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","$5b15465d65b208f9$export$eaafe0fae18e32b1","$c5d62abeb18093bc$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$c5d62abeb18093bc$var$getSmoothClampedResolution","result","$c5d62abeb18093bc$export$56cba9b4a749f219","cappedMaxRes","$dd50dbab14b9e355$export$e97ec87d2336bd4e","$dd50dbab14b9e355$export$eaafe0fae18e32b1","$d26dae22fe1d838f$export$6af9bbf310c9e4bf","$d26dae22fe1d838f$export$452ae967caf14641","dx1","dy1","sx","sy","dx2","dy2","$d26dae22fe1d838f$export$6e6aac0f60e83c70","det","$d26dae22fe1d838f$var$transformStringDiv","$d26dae22fe1d838f$export$47bee913e0e80eb4","transformString","style","$fb5c77af8a17a25c$export$92106241c01aa541","$b682244a7d047928$var$tmpTransform","$b682244a7d047928$export$9099ad97b570f7c","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","$351d82b0a78a5705$export$1bd42086bda9cade","revision","squaredTolerance","getSimplifiedGeometry","clone","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6979b253edf31824$export$d1e01ccfd06bf8ee","rotate","anchor","simplify","tolerance","getType","intersectsExtent","deltaX","deltaY","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$5caa66f67d70c90b$export$2a65008b73824080","layout","$5caa66f67d70c90b$export$9099ad97b570f7c","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","$5caa66f67d70c90b$var$getLayoutForStride","anchorX","anchorY","$fb5c77af8a17a25c$export$d40e2456b1281660","$fb5c77af8a17a25c$export$8f869025bba9609b","$fb5c77af8a17a25c$export$41b0d7466cde8385","$c8d16959777aa5d2$var$assignClosest","offset1","offset2","$c8d16959777aa5d2$export$acf7548d1f0e8581","squaredDelta","$c8d16959777aa5d2$export$ba38095f6bb45df2","$c8d16959777aa5d2$export$cc4caddc4c9b8b6f","maxDelta","isRing","tmpPoint","squaredDistance","$c8d16959777aa5d2$export$3dd3914e22f9012e","$fa72d035ed15d370$export$e175f505890ac90f","$fa72d035ed15d370$export$ab1a51db55485752","coordinatess","$f117f014c02c321b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","$f117f014c02c321b$export$383ea8a1f2974dfb","$f117f014c02c321b$export$e29de4fdb2175738","$f117f014c02c321b$export$1df19a1eb5514c2f","simplifiedEnds","$8156c430059b0be1$export$92f32d891164b0ac","$8156c430059b0be1$export$d82a8a3167f968d","$1720796d74226cac$export$9bf2059fd656d5e9","twiceArea","$1720796d74226cac$export$99cb92d00fd73c87","$14f82d27708e2673$var$LinearRing","coordinates1","layout1","maxDelta_","maxDeltaRevision_","getArea","$14f82d27708e2673$export$9099ad97b570f7c","$b7b44b2e7369d419$var$Point","$6979b253edf31824$export$b6ab620e694fb080","$fa72d035ed15d370$export$a53e62528b652807","$b7b44b2e7369d419$export$9099ad97b570f7c","$fba4e8b2345a6181$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","$081640ea8b715cda$export$c77fe031a1447f2e","$e73c8a2e0bc9e480$export$add61ad31d0a68b4","edge","$e73c8a2e0bc9e480$export$586adaf930d9fdb6","right","isClockwise","$e73c8a2e0bc9e480$export$325e57738fd8b321","$70159e2f3144e634$var$Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","ends1","linearRings","$70159e2f3144e634$export$9099ad97b570f7c","$70159e2f3144e634$export$b50d271c6e9656cd","$4d9e33768334286e$var$animationCallback","returnValue","$4d9e33768334286e$export$5d87c27d7d9f380e","animation","sourceRotation","targetRotation","$4d9e33768334286e$var$calculateCenterOn","position","rotX","rotY","$4d9e33768334286e$export$9099ad97b570f7c","options1","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","options2","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","constrainResolution","capped","$c5d62abeb18093bc$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","$c5d62abeb18093bc$export$7690ad4e930f454b","constraint","$4d9e33768334286e$export$8b6914b45b83f21f","maxResolution_","minResolution_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","$4d9e33768334286e$export$535fae5a159fbda4","rotationConstraint","enableRotation","constrainRotation","theta","$dd50dbab14b9e355$export$37e537ca821cbb20","$4d9e33768334286e$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","$e9b048d51236bbbc$export$a7d473ff80a6a3b","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","$c42f11a8ed244eef$export$16970faadcd3f29b","layerState","$c42f11a8ed244eef$export$9099ad97b570f7c","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","source1","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","getMapInternal","layerStatesArray","getLayerGroup","find","layerState1","layerExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","$6138c5b4bdbde302$export$9099ad97b570f7c","$2670773e9616adac$export$9099ad97b570f7c","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$d210c08aef54bfde$export$9099ad97b570f7c","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","forEachFeatureAtCoordinate","hitTolerance","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","layer1","$911ab4cf0143b734$export$9099ad97b570f7c","inversePixelTransform","$05f8d3eb3a3b3632$var$HEX_COLOR_RE_","$05f8d3eb3a3b3632$var$NAMED_COLOR_RE_","$05f8d3eb3a3b3632$export$9fe004474d6f7f65","color","g","$05f8d3eb3a3b3632$export$47bee913e0e80eb4","$05f8d3eb3a3b3632$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","$05f8d3eb3a3b3632$export$21528ce64591bf2","s","hasAlpha","substr","startsWith","$05f8d3eb3a3b3632$export$2e33abec8aecd572","$05f8d3eb3a3b3632$var$fromStringInternal_","$05f8d3eb3a3b3632$export$7266a24c0caa2a8","$a8df043d7f945436$var$pixelContext","$a8df043d7f945436$export$9099ad97b570f7c","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","willReadFrequently","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","left","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$911c86a56b705ee0$export$9099ad97b570f7c","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileLayer1","pixelToCoordinateTransform","tileOrigin","tileResolution","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","tileSourceKey","postRenderFunctions","tileCallback","wantedTiles","tileQueue","isKeyQueued","enqueue","$326310a679f3ff3e$export$9099ad97b570f7c","$404829bff740bb1b$export$9099ad97b570f7c","$6f518feb4a5d11c4$var$Property","$6f518feb4a5d11c4$export$cf29312ab18b402e","index1","$6f518feb4a5d11c4$export$9099ad97b570f7c","unique_","unique","array_","assertUnique_","updateLength_","getLength","array1","getArray","item","insertAt","elem","removeAt","setAt","except","$0828fcafb706d3fc$var$IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","$0828fcafb706d3fc$var$getKey","maxCacheSize","$0828fcafb706d3fc$export$601b9e2be44c7cb2","$acb05479f915e9be$var$expireIconCache","map1","$acb05479f915e9be$export$9099ad97b570f7c","map_","dispatchRenderEvent","calculateMatrices2D","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","$3b0bd531a043cbd1$export$5a0d9577a24f3c5b","offsets","layerStates","numLayers","tmpCoord","order","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","$8dfbec8593aa270d$export$4b206f1dd0085e9f","$8dfbec8593aa270d$export$6cfb92f3ca39d412","$8dfbec8593aa270d$export$a6463a3b3793c500","$8dfbec8593aa270d$var$fontRegEx","RegExp","$8dfbec8593aa270d$var$fontRegExMatchIndex","$8dfbec8593aa270d$export$b705256ab57c20ca","fontSpec","lineHeight","weight","variant","families","family","$0511c8c10849dc1a$export$907cf5cff4a8acb1","$0511c8c10849dc1a$var$measureFont","$0511c8c10849dc1a$var$measureContext","$0511c8c10849dc1a$export$384c0f09c94ed6cc","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$0511c8c10849dc1a$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","measureElement","$0511c8c10849dc1a$var$measureText","measureText","$a7bc897a99e1468c$export$9099ad97b570f7c","fontChangeListenerKey_","redrawText","element_","$8dfbec8593aa270d$export$2fbf9d496fb0d5a8","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","display","declutterLayers","previousElement","sourceState","children","oldChildren","childNodes","oldChild","newChild","$1999371b8a7a6e92$export$439ebc2b0f0ec9f4","layers","renderDeclutter","$9b534bf563223e28$export$88ab4fe370923b6f","$9b534bf563223e28$var$Property","$9b534bf563223e28$var$LayerGroup","layers1","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","layer2","collection","currentLayers","pos","ownLayerState","defaultZIndex","$9b534bf563223e28$export$9099ad97b570f7c","$fb4925193e6007b2$export$9099ad97b570f7c","$87748d91c1ff80d0$export$9099ad97b570f7c","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","$d1dde526982cc5ac$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a59fb3ca034fecde$export$9099ad97b570f7c","$08be60d5c9a54b41$export$9099ad97b570f7c","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$97a07643bed490b2$export$9099ad97b570f7c","$de0c0f8112f90228$export$9099ad97b570f7c","$c6360ad74bd7a546$export$55b8074a560bbdf4","$c6360ad74bd7a546$export$9099ad97b570f7c","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","priorityFunction1","$40a9fb900c9e0ad4$export$9099ad97b570f7c","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$88abedb827e5ec1b$export$9099ad97b570f7c","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$72fd36fb1a212cd3$export$9099ad97b570f7c","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","setCollapsible","updateElement_","lastChild","$1999371b8a7a6e92$export$f0994cfd84ab1152","element1","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$f0a10ea98a6cb519$export$9099ad97b570f7c","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","$d3f921aa5a285174$export$9099ad97b570f7c","delta1","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$0d5605eedb6da3c8$export$9099ad97b570f7c","$33139a7ba78491c7$export$d2c07614bfd6a817","$33139a7ba78491c7$export$9099ad97b570f7c","setActive","getActive","mapBrowserEvent","active","$787de85327c916bb$export$9099ad97b570f7c","delta_","stopEvent","browserEvent","shiftKey","$82cbbbeb425d67d7$export$e61edea4dfe4ed9b","$82cbbbeb425d67d7$export$9099ad97b570f7c","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$83e85025105111b6$export$8dbdea330bbd6b3c","conditions","pass","$83e85025105111b6$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$83e85025105111b6$export$584a07df7b145c47","getTargetElement","hasAttribute","targetElement","activeElement","$83e85025105111b6$export$363947888fb85da6","$83e85025105111b6$export$a8612972eacfc116","$83e85025105111b6$export$9f5e19851eeaf2c1","$83e85025105111b6$export$1734dfcac3c09b2f","$83e85025105111b6$export$59c8376875f673f8","$83e85025105111b6$export$5bbcce8021828272","tagName","isContentEditable","$83e85025105111b6$export$d31d3f3aa38542a8","pointerType","$83e85025105111b6$export$45cd27c0322d6513","isPrimary","$a42fdc6c339cab83$export$9099ad97b570f7c","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","begin","distance","getDistance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$9057ffe9f6806c34$export$9099ad97b570f7c","lastAngle_","$6a5b5969cfd0314b$export$9099ad97b570f7c","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","$66cbaf7779269f15$var$DragBoxEventType","$66cbaf7779269f15$export$4d9b552836937ca2","mapBrowserEvent1","$66cbaf7779269f15$export$9099ad97b570f7c","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$0da21c36fc8689b0$export$9099ad97b570f7c","out_","out","$42ce773ffc313d0b$export$9099ad97b570f7c","$f6b95667a4c90ca6$export$9099ad97b570f7c","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$33139a7ba78491c7$export$63568b31cb17dd4d","$9eebcf690d0cc684$export$9099ad97b570f7c","$83e85025105111b6$export$2f688d8a41d1df21","$f3f3e2bdc0486d9f$export$9099ad97b570f7c","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","delay1","lastIndex","firstIndex","$e4045b56fe7b53f8$export$9099ad97b570f7c","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$7569a186ce0b430a$export$9099ad97b570f7c","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$916765f6a8929418$export$9099ad97b570f7c","lastDistance_","lastScaleDelta_","scaleDelta","$fb244fe1c9d9d25f$var$removeLayerMapProperty","$fb244fe1c9d9d25f$var$setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","$fb244fe1c9d9d25f$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attribution","attributionOptions","$057a91711f0e964f$export$b403fbac94228e09","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$d5f995f163692d84$export$b403fbac94228e09","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileCenter","$40a9fb900c9e0ad4$export$f7de9366327711a7","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","oldSize"],"version":3,"file":"index.22aa26ed.js.map"}