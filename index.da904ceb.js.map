{"mappings":"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","sources":["node_modules/ol/src/events/EventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/TileState.js","node_modules/ol/src/util.js","node_modules/ol/src/easing.js","node_modules/ol/src/Tile.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/extent.js","node_modules/ol/src/events.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/source/State.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/size.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/transform.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","main.ts"],"sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","import OSM from 'ol/source/OSM.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport { Map, View } from 'ol';\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"names":["$360d9a9621464d34$export$9099ad97b570f7c","$aa9447dea9a12a8f$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$175694b649fdbaa2$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$106eee51eb5027f3$export$8eda8fbd1364c8a1","a","b","$106eee51eb5027f3$export$45934da9231b7323","arr","direction","n","length","i","$106eee51eb5027f3$export$46e35401bc090c62","data","extension","Array","isArray","$106eee51eb5027f3$export$bcc761834e33d339","arr1","arr2","len1","$e8fe802d0684ce0f$export$ad8dd69aa6772cd0","$e8fe802d0684ce0f$export$5c50afa32081505e","$e8fe802d0684ce0f$export$3850addf0fb4e6a7","$b1c01449f6fb04fd$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$b1c01449f6fb04fd$export$97fff7491bd246bd","object","property","$b1c01449f6fb04fd$export$207c30846165e93a","values","push","$b1c01449f6fb04fd$export$988399e568471db1","$5871a677c2d47110$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$5871a677c2d47110$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$1eec589ef9f03c3a$export$9099ad97b570f7c","$abf34980d1562f58$export$18e1b4ff5b3c2297","Error","$abf34980d1562f58$var$uidCounter_","$abf34980d1562f58$export$604e9536b9e0488a","obj","ol_uid","String","$453e0f55adf2aa98$export$9fbc3b1d6b2da9ec","t","Math","pow","$453e0f55adf2aa98$export$673b9849e2bc032c","$453e0f55adf2aa98$export$1b5c1277e30d397d","$453e0f55adf2aa98$export$5523e35ab8ae283a","$150b5bd0bfcaba04$export$9099ad97b570f7c","Tile","tileCoord","state","opt_options","options","interimTile","transition_","transition","transitionStarts_","$150b5bd0bfcaba04$var$__extends","changed","release","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","setState","load","getAlpha","id","time","start","delta","inTransition","endTransition","$5871a677c2d47110$exports","default","$2e5310563a29b6d9$var$ua","navigator","userAgent","toLowerCase","$2e5310563a29b6d9$export$543c908bf17a24fb","$2e5310563a29b6d9$export$bccc8605349feea7","$2e5310563a29b6d9$export$f16ffc71033a7aaa","$2e5310563a29b6d9$export$1940d5d2b4cf824d","devicePixelRatio","$2e5310563a29b6d9$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2e5310563a29b6d9$export$9544418e5c6fedfe","Image","decode","$2e5310563a29b6d9$export$700ce540937d8c69","passive","defineProperty","get","window","error","$e938c51870f186d7$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","document","createElement","style","all","width","height","getContext","$e938c51870f186d7$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$e938c51870f186d7$export$47503d53c08beb29","node","removeChild","$244f7fbdc76b1fe6$export$9099ad97b570f7c","ImageBase","extent","resolution","pixelRatio","pixelRatio_","$244f7fbdc76b1fe6$var$__extends","getExtent","getImage","getPixelRatio","getResolution","$2afaec311bc855ad$export$9099ad97b570f7c","$a6e2e0d6d016083d$export$9099ad97b570f7c","$a13b08ece8514024$export$9099ad97b570f7c","$4a6933b8a2a12a45$export$9099ad97b570f7c","AssertionError","code","message","split","name","$4a6933b8a2a12a45$var$__extends","$a93d7950106d9b94$export$b8795f4f643ce74f","assertion","errorCode","$4a6933b8a2a12a45$exports","$4b239fe5fbbd9442$export$a7ecbd362d65c1fe","coordinates","$4b239fe5fbbd9442$export$dbb3d72606cdc11","$4b239fe5fbbd9442$export$2852acc8f8b94686","$4b239fe5fbbd9442$export$c7d6a927f416dd39","x","y","dx","dy","$4b239fe5fbbd9442$export$c422a9fcb5f1ee5c","coordinate","$4b239fe5fbbd9442$export$cc70e7e516e4370f","$4b239fe5fbbd9442$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$4b239fe5fbbd9442$export$ea8082d0226d35a5","opt_extent","$4b239fe5fbbd9442$export$80741250c74fd4fa","$4b239fe5fbbd9442$export$bcc761834e33d339","extent1","extent2","$4b239fe5fbbd9442$export$4b116deb3079b147","flatCoordinates","offset","end","stride","$4b239fe5fbbd9442$export$8696fee511ea7c7a","min","max","$4b239fe5fbbd9442$export$c26f7b9c5adc34b4","callback","val","$4b239fe5fbbd9442$export$3932426cd8118930","$4b239fe5fbbd9442$export$4e2fc25ce97f3583","$4b239fe5fbbd9442$export$35aedeaeee8be6cd","$4b239fe5fbbd9442$export$5100f0815ea32995","$4b239fe5fbbd9442$export$ab4e37d31d15614d","area","$4b239fe5fbbd9442$export$988399e568471db1","$4b239fe5fbbd9442$export$3dc3550566517965","$4b239fe5fbbd9442$export$e178c8044d3d0a05","$4b239fe5fbbd9442$export$339e303bf205caae","$4b239fe5fbbd9442$export$38622892ed79bdc7","corner","$4b239fe5fbbd9442$export$3212225221d5bc14","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$4b239fe5fbbd9442$export$c491031eb9adcc3a","intersection","$4b239fe5fbbd9442$export$c3bd2c3b798b0350","$4b239fe5fbbd9442$export$76e02248c0889c3e","transformFn","opt_stops","xs","ys","l","apply","$4b239fe5fbbd9442$var$_boundingExtentXYs","$397f0f5ed9a3050c$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$397f0f5ed9a3050c$export$d2df825b2d8bc2ba","$397f0f5ed9a3050c$export$6dee5fd4fdf600ff","$9d0a6d02ef4dbef8$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","src","promise","listening_1","then","catch","listenerKeys","forEach","ImageWrapper","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$9d0a6d02ef4dbef8$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$244f7fbdc76b1fe6$exports","$00b94bfd7801f3c8$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$00b94bfd7801f3c8$var$__extends","element","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$9d0a6d02ef4dbef8$exports","listenImage","$150b5bd0bfcaba04$exports","$9e10b55cc3e5aff2$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$9e10b55cc3e5aff2$export$af68584dedf5e52c","PI","$9e10b55cc3e5aff2$export$9099ad97b570f7c","$02080a5168d333d1$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$1cba8f77b2fc8147$export$4b8705656de00c72","value","$1cba8f77b2fc8147$export$4a376e0f60d976ee","cosh","exp","$1cba8f77b2fc8147$export$e08236045caaa3e1","log2","log","LOG2E","$1cba8f77b2fc8147$export$fd0b1e5ac4df516c","$1cba8f77b2fc8147$export$8b6706701cd75ea9","$1cba8f77b2fc8147$export$11468133b1231643","angleInRadians","$1cba8f77b2fc8147$export$4fc80c88d72f096","angleInDegrees","$1cba8f77b2fc8147$export$3334706ffb3dccb1","r","$1cba8f77b2fc8147$export$45ca8e7f50ccf2e0","$4cdcea7942371c6e$export$bb1f4f75177e5528","$4cdcea7942371c6e$export$6fd015d56b8406c9","$4cdcea7942371c6e$export$64afaa717a0c4932","$4cdcea7942371c6e$export$2126dea64bc40b7b","tan","$4cdcea7942371c6e$var$EPSG3857Projection","EPSG3857Projection","point","$4cdcea7942371c6e$var$__extends","$4cdcea7942371c6e$export$850c9b527a5298aa","$4cdcea7942371c6e$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","slice","$4cdcea7942371c6e$export$f361696640082386","atan","$2bd0be18b84525d9$export$6fd015d56b8406c9","$2bd0be18b84525d9$export$af68584dedf5e52c","$2bd0be18b84525d9$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$2bd0be18b84525d9$var$__extends","$2bd0be18b84525d9$export$850c9b527a5298aa","$a9a5e0c6ca2e1695$var$cache","$53c818eff833bb4a$var$transforms","$53c818eff833bb4a$export$568ed88074851180","destination","sourceCode","destinationCode","$617763bc4bd20684$export$9099ad97b570f7c","$dcc53fed7252e62f$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$dcc53fed7252e62f$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$04466ada99459d91$export$bcc761834e33d339","coordinate1","coordinate2","equals","$04466ada99459d91$export$d40e2456b1281660","angle","cosAngle","sinAngle","$04466ada99459d91$export$c8ebaff90a21375a","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","sourceExtentWidth","floor","$fa384abe43b1f395$export$3fbbaef54e2e9d28","$fa384abe43b1f395$export$678028d364072132","$fa384abe43b1f395$export$6308908a0016f099","$a9a5e0c6ca2e1695$export$568ed88074851180","$fa384abe43b1f395$export$7eb84799c931fe91","projectionLike","replace","$fa384abe43b1f395$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$fa384abe43b1f395$export$747af4f49bde2f53","vertices","$fa384abe43b1f395$export$a42db349809b0c24","projections","$fa384abe43b1f395$export$fd4cd3535c7ea97f","$fa384abe43b1f395$export$f704437a72056fb8","defaultCode","$fa384abe43b1f395$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","$53c818eff833bb4a$export$7eb84799c931fe91","$fa384abe43b1f395$export$9336879ef6599bf5","$fa384abe43b1f395$export$4b169b49e1a4823b","$fa384abe43b1f395$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$fa384abe43b1f395$var$userProjection","$fa384abe43b1f395$export$4a182a4d53d7595c","$fa384abe43b1f395$export$b5d00774755783fc","destProjection","$fa384abe43b1f395$export$f87215506b474b9e","$4cdcea7942371c6e$exports","PROJECTIONS","$2bd0be18b84525d9$exports","fromEPSG4326","toEPSG4326","$72092921cefc513c$var$brokenDiagonalRendering_","$8d02cc6e51329a90$export$9099ad97b570f7c","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","ceil","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$7125477b3730d11b$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$72092921cefc513c$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$72092921cefc513c$var$verifyBrokenDiagonalRendering","$72092921cefc513c$export$fbbff54b3c32db8d","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$72092921cefc513c$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","context","round","pixelRound","scale","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","mat","maxRow","maxEl","absValue","tmp","j","coef","k","m","$1cba8f77b2fc8147$export$27dc5719ceda6735","getImageData","$72092921cefc513c$var$isBrokenDiagonalRendering","ud","vd","step","steps","translate","strokeStyle","lineWidth","stroke","$938fa94ea91032bd$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$72092921cefc513c$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$938fa94ea91032bd$var$__extends","reproject_","z","getTileSize","leftToLoad_1","sourceListenKey_1","e","state1","unlistenSources_","setTimeout","$350327925a545431$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","clear","containsKey","f","entry","value_","key_","newer","older","remove","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","pop","set","setSize","$298e07180ebbc18c$export$ea8082d0226d35a5","opt_tileCoord","$298e07180ebbc18c$export$1039fb0288fd71e3","$298e07180ebbc18c$export$a0f0ccbe5bbc0789","$b8c0af040d9dc0fe$export$9099ad97b570f7c","TileCache","$b8c0af040d9dc0fe$var$__extends","expireCache","usedTiles","pruneExceptNewestZ","map","Number","$298e07180ebbc18c$export$5208a752d34424e5","$1e36dd0d5814997b$export$9099ad97b570f7c","$3dc3825e79de4e26$export$9099ad97b570f7c","$c022d33ed6bb5ca2$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c022d33ed6bb5ca2$var$__extends","getRevision","len","ol_key","$c022d33ed6bb5ca2$export$21f63b82add5980c","$c022d33ed6bb5ca2$export$9099ad97b570f7c","$8f7fdb7cfb75e879$export$b902cfd711fa7f06","ObjectEvent","oldValue","$8f7fdb7cfb75e879$var$__extends","$8f7fdb7cfb75e879$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$c022d33ed6bb5ca2$exports","$a979859450d27aab$export$9099ad97b570f7c","$2317568ccbc72da2$var$adaptAttributions","attributionLike","frameState","$2317568ccbc72da2$export$9099ad97b570f7c","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","Promise","resolve","reject","$2317568ccbc72da2$var$__extends","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getWrapX","getContextOptions","refresh","setAttributions","$8f7fdb7cfb75e879$exports","$848a86622bea988b$var$TileRange","TileRange","contains","containsXY","containsTileRange","tileRange","extend","getHeight","getSize","getWidth","intersects","$848a86622bea988b$export$ea8082d0226d35a5","$848a86622bea988b$export$9099ad97b570f7c","$3f0417c20d1cc4a3$export$c563c2b7121f8771","$3f0417c20d1cc4a3$export$48d31d2725e4d98b","opt_size","$ec3aa58fac71f355$var$tmpTileCoord","$ec3aa58fac71f355$export$9099ad97b570f7c","TileGrid","opt_strict","compare","zoomFactor","minZoom","resolutions_","resolutions","every","currentVal","res","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","jj","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getMaxZoom","getMinZoom","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","$cb780d18f7933e5c$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$cb780d18f7933e5c$var$resolutionsFromExtent","$cb780d18f7933e5c$export$57c49ef1657592d4","$cb780d18f7933e5c$export$9666e825b22d806d","$cb780d18f7933e5c$export$6dfef52f91d4f582","opt_maxResolution","maxResolution","half","$824311a81ea848b7$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$b8c0af040d9dc0fe$exports","cacheSize","tmpSize","tileOptions","zDirection","$824311a81ea848b7$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","ratio","getTileCoordForTileUrlFunction","opt_projection","worldWidth","$cb780d18f7933e5c$export$5a0d9577a24f3c5b","$298e07180ebbc18c$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$2317568ccbc72da2$exports","$824311a81ea848b7$export$8434c8db61edbf9d","TileSourceEvent","$824311a81ea848b7$export$9099ad97b570f7c","$88df26af4a8f1ef6$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","$88df26af4a8f1ef6$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$298e07180ebbc18c$export$4639c7f2947f4458","$88df26af4a8f1ef6$export$c6a04e0c49b28953","$1dbd919805fd1d18$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$1dbd919805fd1d18$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","$824311a81ea848b7$exports","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","$88df26af4a8f1ef6$export$47abe479fba0e55d","join","$505aa269794a499f$var$defaultTileLoadFunction","imageTile","$505aa269794a499f$export$9099ad97b570f7c","TileImage","tileClass","$00b94bfd7801f3c8$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$505aa269794a499f$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","cache","newTile","$938fa94ea91032bd$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","$1dbd919805fd1d18$exports","$72436993edd2ca04$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$cb780d18f7933e5c$export$5731532c605ee56","$72436993edd2ca04$var$__extends","$505aa269794a499f$exports","$e418fa376f25023c$export$bd9c1867755cf54e","$e418fa376f25023c$export$9099ad97b570f7c","OSM","$e418fa376f25023c$var$__extends","$72436993edd2ca04$exports","$b20feb8964318d3f$export$9099ad97b570f7c","$a91eb7d9c06d6003$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","minResolution","className_","className","$a91eb7d9c06d6003$var$__extends","getClassName","getLayerState","opt_managed","layer","managed","getZIndex","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$782b75247205ab14$export$9099ad97b570f7c","$c8891acc328b159c$export$16970faadcd3f29b","layerState","viewState","$c8891acc328b159c$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","handleSourcePropertyChange_","setSource","$c8891acc328b159c$var$__extends","array","states","getSource","handleSourceChange_","getFeatures","pixel","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$a91eb7d9c06d6003$exports","$d9384f01d604a2a6$export$9099ad97b570f7c","$87fb90d07b93a774$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$87fb90d07b93a774$var$__extends","getPreload","getUseInterimTilesOnError","$c8891acc328b159c$exports","$7971363be443bf07$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$7971363be443bf07$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","$ea4701d35a7bcfcb$var$transformStringDiv","$ffba12b1b1caac35$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$ffba12b1b1caac35$var$__extends","$ea4701d35a7bcfcb$export$6af9bbf310c9e4bf","$ea4701d35a7bcfcb$export$452ae967caf14641","dx1","dy1","sx","sy","dx2","dy2","$ea4701d35a7bcfcb$export$6e6aac0f60e83c70","det","$ea4701d35a7bcfcb$export$47bee913e0e80eb4","transformString","$eb83c055c71b92dc$var$fontRegEx","RegExp","$eb83c055c71b92dc$var$fontRegExMatchIndex","$eb83c055c71b92dc$export$b705256ab57c20ca","fontSpec","lineHeight","weight","variant","families","family","$eb83c055c71b92dc$export$e04cd5eb7e7428c6","$d3c91b778f21fae8$export$9099ad97b570f7c","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","$d3c91b778f21fae8$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","position","appendChild","left","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","event_1","$ffba12b1b1caac35$exports","preRender","postRender","getRenderTransform","offsetX","renderPixel","layerExtent","pixelToCoordinateTransform","newCanvas","newContext","clearRect","err","Uint8Array","$7971363be443bf07$exports","$0704a0db83121540$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$0704a0db83121540$var$__extends","isDrawableTile","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","tileResolution","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","sort","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","w","h","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","animate","postRenderFunction","tileSource1","frameState1","tileSourceKey","postRenderFunctions","opt_tileCallback","wantedTiles","tileQueue","isKeyQueued","enqueue","$d3c91b778f21fae8$exports","$0704a0db83121540$export$9099ad97b570f7c","$adffffba3f1e99ac$export$9099ad97b570f7c","TileLayer","$adffffba3f1e99ac$var$__extends","$0704a0db83121540$exports","$87fb90d07b93a774$exports","$4a3eb4cf07e68bcb$var$HEX_COLOR_RE_","$4a3eb4cf07e68bcb$var$NAMED_COLOR_RE_","$4a3eb4cf07e68bcb$export$9fe004474d6f7f65","color","g","$4a3eb4cf07e68bcb$export$47bee913e0e80eb4","$4a3eb4cf07e68bcb$var$fromNamed","el","body","rgb","getComputedStyle","$4a3eb4cf07e68bcb$export$2e33abec8aecd572","$e2ca19531263975f$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","$e2ca19531263975f$var$getKey","maxCacheSize","$e2ca19531263975f$export$601b9e2be44c7cb2","$23233cffd63dbe95$var$expireIconCache","$23233cffd63dbe95$export$9099ad97b570f7c","MapRenderer","map_","$23233cffd63dbe95$var$__extends","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","$04466ada99459d91$export$5a0d9577a24f3c5b","offsets","layerStates","numLayers","tmpCoord","inView","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","$3f8842a01a05d29f$export$907cf5cff4a8acb1","console","warn","$3f8842a01a05d29f$var$measureFont","$3f8842a01a05d29f$var$measureContext","$3f8842a01a05d29f$export$384c0f09c94ed6cc","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3f8842a01a05d29f$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","$3f8842a01a05d29f$var$measureText","measureText","$de107509ffcc1e1e$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$eb83c055c71b92dc$export$2fbf9d496fb0d5a8","getViewport","insertBefore","firstChild","children_","renderedVisible_","$de107509ffcc1e1e$var$__extends","declutterLayers","previousElement","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$e938c51870f186d7$export$439ebc2b0f0ec9f4","display","$23233cffd63dbe95$exports","$b22fe65cc2091c4a$export$9099ad97b570f7c","$c8bee1b3aeb9d79e$var$Property","$c8bee1b3aeb9d79e$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$c8bee1b3aeb9d79e$var$__extends","$c8bee1b3aeb9d79e$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","item","insertAt","elem","removeAt","setAt","opt_except","$3bf57b305f2befe1$var$Property","$3bf57b305f2befe1$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$c8bee1b3aeb9d79e$exports","setLayers","$3bf57b305f2befe1$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$cd0dc31bb7f07bd8$export$9099ad97b570f7c","MapEvent","$cd0dc31bb7f07bd8$var$__extends","$d4f51dc221fadaed$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$d4f51dc221fadaed$var$__extends","getEventPixel","getCoordinateFromPixel","$cd0dc31bb7f07bd8$exports","$a406e3695e3399d9$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a69469b84400a522$export$9099ad97b570f7c","$85c0a5b12bf0966d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$85c0a5b12bf0966d$var$__extends","emulateClick_","pointerEvent","newEvent","$d4f51dc221fadaed$exports","clearTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$9dc1c4328cbd3b30$export$9099ad97b570f7c","$a2f92f24bac5651c$export$9099ad97b570f7c","$9ea30a2172af1cde$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$5e7cdcfae3171aaa$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$5e7cdcfae3171aaa$var$__extends","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$5e7cdcfae3171aaa$export$f7de9366327711a7","tileCenter","deltaX","deltaY","$2856fbf609c8d5d1$export$9099ad97b570f7c","$8b00b5310669c7ed$export$9099ad97b570f7c","$00d39586d2dd894f$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$00d39586d2dd894f$export$eaafe0fae18e32b1","$e1ddb1e9ae31ae02$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e1ddb1e9ae31ae02$var$getSmoothClampedResolution","$e1ddb1e9ae31ae02$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$a18de7eaf14a0b33$export$e97ec87d2336bd4e","$a18de7eaf14a0b33$export$eaafe0fae18e32b1","$adef5d18c3ab54fd$export$9099ad97b570f7c","$49a9dfb608ce5f95$export$92106241c01aa541","opt_dest","dest","$ba41d9b80f779606$var$tmpTransform","$ba41d9b80f779606$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$ba41d9b80f779606$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$4b239fe5fbbd9442$export$d1e01ccfd06bf8ee","rotate","anchor","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$7e268a797fd34dbd$export$2a65008b73824080","layout","$7e268a797fd34dbd$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$7e268a797fd34dbd$export$9099ad97b570f7c","SimpleGeometry","$7e268a797fd34dbd$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$7e268a797fd34dbd$var$getLayoutForStride","anchorX","anchorY","$49a9dfb608ce5f95$export$d40e2456b1281660","$49a9dfb608ce5f95$export$8f869025bba9609b","$49a9dfb608ce5f95$export$41b0d7466cde8385","$ba41d9b80f779606$exports","$40f507b383da395e$var$assignClosest","offset1","offset2","$40f507b383da395e$export$acf7548d1f0e8581","squaredDelta","$40f507b383da395e$export$ba38095f6bb45df2","ends","$40f507b383da395e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$40f507b383da395e$export$3dd3914e22f9012e","$6cb5b4913a2f0936$export$e175f505890ac90f","$6cb5b4913a2f0936$export$ab1a51db55485752","coordinatess","opt_ends","$d043153e418ded33$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$d043153e418ded33$export$383ea8a1f2974dfb","$d043153e418ded33$export$e29de4fdb2175738","$d043153e418ded33$export$1df19a1eb5514c2f","simplifiedEnds","$3185dd1b8645ed57$export$92f32d891164b0ac","opt_coordinates","$3185dd1b8645ed57$export$d82a8a3167f968d","opt_coordinatess","$40a616a92c640fdd$export$9bf2059fd656d5e9","twiceArea","$40a616a92c640fdd$export$99cb92d00fd73c87","$43c0695b48c31937$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$43c0695b48c31937$var$__extends","getArea","$7e268a797fd34dbd$exports","$fd187036c4ad2ec2$export$9099ad97b570f7c","Point","$fd187036c4ad2ec2$var$__extends","$6cb5b4913a2f0936$export$a53e62528b652807","$7b5592c4b91a07ed$export$f7b55b637f92fd7","$7b5592c4b91a07ed$export$e2ed757909b25f63","wn","$7b5592c4b91a07ed$export$51e46a3625992b91","$b9b67588a55982e7$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$76e31ee9dbbe302d$export$26f047a5bfac4b1a","coordinatesExtent","ret","$1c34f05d540d121d$export$40f3d9558cf6e846","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","$4b239fe5fbbd9442$export$525a75abb91115e3","$76e31ee9dbbe302d$export$717c2c7c46a5bf3d","$76e31ee9dbbe302d$export$f14bd9270666b480","$32fb60cc2618c78c$export$c77fe031a1447f2e","$ee95668e612b360f$export$add61ad31d0a68b4","edge","$ee95668e612b360f$export$586adaf930d9fdb6","opt_right","right","isClockwise","$ee95668e612b360f$export$325e57738fd8b321","$67ee9fdd559ae60e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$67ee9fdd559ae60e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$fd187036c4ad2ec2$exports","getLinearRingCount","getLinearRing","$43c0695b48c31937$exports","getLinearRings","linearRings","$67ee9fdd559ae60e$export$9099ad97b570f7c","$67ee9fdd559ae60e$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$67ee9fdd559ae60e$export$b50d271c6e9656cd","$67ee9fdd559ae60e$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$67ee9fdd559ae60e$export$5d1798f0e1df079","getRadius","startAngle","$4d09fd224bce9aac$var$animationCallback","returnValue","$4d09fd224bce9aac$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d09fd224bce9aac$export$8b6914b45b83f21f","resolutionConstraint","smoothResolutionConstraint","projExtent","constrainResolution","capped","$e1ddb1e9ae31ae02$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$e1ddb1e9ae31ae02$export$7690ad4e930f454b","constraint","$4d09fd224bce9aac$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d09fd224bce9aac$export$5d87c27d7d9f380e","animation","sourceRotation","targetRotation","$4d09fd224bce9aac$var$calculateCenterOn","rotX","rotY","$4d09fd224bce9aac$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$4d09fd224bce9aac$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$fa384abe43b1f395$export$a7d473ff80a6a3b","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$67ee9fdd559ae60e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","targetRes","$7f90c67a94ff7584$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$3bf57b305f2befe1$exports","view","$4d09fd224bce9aac$exports","$7f90c67a94ff7584$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$5e7cdcfae3171aaa$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","$7f90c67a94ff7584$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getOverlayById","group","collection","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","handlePostRender","hints","viewHints","lowOnFrameBudget","$85c0a5b12bf0966d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","$8f4a601d9be32279$export$9099ad97b570f7c","Control","target_","$8f4a601d9be32279$var$__extends","mapEvent","$061c199bdbf67255$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$061c199bdbf67255$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","$e938c51870f186d7$export$f0994cfd84ab1152","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8f4a601d9be32279$exports","$c0271bd4f0f131b5$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$c0271bd4f0f131b5$var$__extends","resetNorth_","$a099fe81d7933b1b$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$a099fe81d7933b1b$var$__extends","zoomByDelta_","currentZoom","newZoom","$9b8240cd930c7251$export$9099ad97b570f7c","$cc7ed3d15f79f09e$export$63568b31cb17dd4d","$cc7ed3d15f79f09e$export$d2c07614bfd6a817","$cc7ed3d15f79f09e$export$9099ad97b570f7c","Interaction","setActive","$cc7ed3d15f79f09e$var$__extends","active","$05d04f741d9f44ea$export$9099ad97b570f7c","DoubleClickZoom","delta_","$05d04f741d9f44ea$var$__extends","stopEvent","shiftKey","$cc7ed3d15f79f09e$exports","zoomByDelta","$4e21594aff042ad9$export$e61edea4dfe4ed9b","$4e21594aff042ad9$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$4e21594aff042ad9$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$4e21594aff042ad9$var$isPointerDraggingEvent","$719344b2915a5282$export$8dbdea330bbd6b3c","conditions","pass","$719344b2915a5282$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$719344b2915a5282$export$584a07df7b145c47","hasAttribute","activeElement","$719344b2915a5282$export$363947888fb85da6","$719344b2915a5282$export$a8612972eacfc116","$719344b2915a5282$export$9f5e19851eeaf2c1","$719344b2915a5282$export$1734dfcac3c09b2f","$719344b2915a5282$export$59c8376875f673f8","$719344b2915a5282$export$5bbcce8021828272","tagName","$719344b2915a5282$export$d31d3f3aa38542a8","pointerType","$719344b2915a5282$export$45cd27c0322d6513","isPrimary","$30483e29507706cc$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$30483e29507706cc$var$__extends","centroid","$4e21594aff042ad9$exports","update","begin","getDistance","getAngle","centerpx","$fba38e1bcb241519$export$9099ad97b570f7c","DragRotate","lastAngle_","$fba38e1bcb241519$var$__extends","$aceb96e89d56f634$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$aceb96e89d56f634$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$20cb6644c41e6461$var$DragBoxEventType","$20cb6644c41e6461$export$4d9b552836937ca2","DragBoxEvent","$20cb6644c41e6461$var$__extends","$20cb6644c41e6461$export$9099ad97b570f7c","DragBox","box_","$aceb96e89d56f634$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$c82213a35099ea60$export$9099ad97b570f7c","DragZoom","out_","out","$c82213a35099ea60$var$__extends","$20cb6644c41e6461$exports","$b33346ced3ffa1bb$export$9099ad97b570f7c","$a55d85978dd11fe1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$a55d85978dd11fe1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$231d0cdbd522b255$export$9099ad97b570f7c","KeyboardZoom","$231d0cdbd522b255$var$__extends","$49ab15a508fcdc65$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$3750bcddcbf4c872$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$3750bcddcbf4c872$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$3750bcddcbf4c872$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6a2e253f5cb0bc62$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$6a2e253f5cb0bc62$var$__extends","rotationDelta","touch0","touch1","$9dd5b3aa2e054d06$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$9dd5b3aa2e054d06$var$__extends","scaleDelta","$a9d71ecad6ede6f8$export$9099ad97b570f7c","Map1","$a099fe81d7933b1b$exports","zoomOptions","$c0271bd4f0f131b5$exports","rotateOptions","attribution","$061c199bdbf67255$exports","attributionOptions","$070ebaa1cd5f7208$export$b403fbac94228e09","altShiftDragRotate","$fba38e1bcb241519$exports","doubleClickZoom","$05d04f741d9f44ea$exports","zoomDelta","zoomDuration","dragPan","$30483e29507706cc$exports","pinchRotate","$6a2e253f5cb0bc62$exports","pinchZoom","$9dd5b3aa2e054d06$exports","keyboard","$a55d85978dd11fe1$exports","$231d0cdbd522b255$exports","mouseWheelZoom","$3750bcddcbf4c872$exports","shiftDragZoom","$c82213a35099ea60$exports","$7251b9d3abaab321$export$b403fbac94228e09","$a9d71ecad6ede6f8$var$__extends","$de107509ffcc1e1e$exports","$7f90c67a94ff7584$exports","$a9d71ecad6ede6f8$exports","$adffffba3f1e99ac$exports","$e418fa376f25023c$exports"],"version":3,"file":"index.da904ceb.js.map"}