{"mappings":"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","sources":["node_modules/ol/src/events/EventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/TileState.js","node_modules/ol/src/util.js","node_modules/ol/src/easing.js","node_modules/ol/src/Tile.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/extent.js","node_modules/ol/src/events.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/source/State.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/size.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/transform.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","main.ts"],"sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","import OSM from 'ol/source/OSM.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport { Map, View } from 'ol';\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"names":["$1f1034d6043b657b$export$9099ad97b570f7c","$664ea55fc19a08b3$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$69c59045833c3003$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$31189420a57baeba$export$8eda8fbd1364c8a1","a","b","$31189420a57baeba$export$45934da9231b7323","arr","direction","n","length","i","$31189420a57baeba$export$46e35401bc090c62","data","extension","Array","isArray","$31189420a57baeba$export$bcc761834e33d339","arr1","arr2","len1","$351d82b0a78a5705$export$ad8dd69aa6772cd0","$351d82b0a78a5705$export$5c50afa32081505e","$351d82b0a78a5705$export$3850addf0fb4e6a7","$43f7a9f222abbea0$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$43f7a9f222abbea0$export$97fff7491bd246bd","object","property","$43f7a9f222abbea0$export$207c30846165e93a","values","push","$43f7a9f222abbea0$export$988399e568471db1","$ad3de02656425e16$export$9099ad97b570f7c","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ad3de02656425e16$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$64b89b0b3d0b4cba$export$9099ad97b570f7c","$e14829ca1f519173$export$18e1b4ff5b3c2297","Error","$e14829ca1f519173$var$uidCounter_","$e14829ca1f519173$export$604e9536b9e0488a","obj","ol_uid","String","$e14829ca1f519173$export$f2eb173e8f6e4130","$d316f2294d12f14b$export$9fbc3b1d6b2da9ec","t","Math","pow","$d316f2294d12f14b$export$673b9849e2bc032c","$d316f2294d12f14b$export$1b5c1277e30d397d","$d316f2294d12f14b$export$5523e35ab8ae283a","$c0f00e1ca40f5de0$export$9099ad97b570f7c","Tile","tileCoord","state","opt_options","options","interimTile","transition_","transition","transitionStarts_","$c0f00e1ca40f5de0$var$__extends","changed","release","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","setState","load","getAlpha","id","time","start","delta","inTransition","endTransition","$ad3de02656425e16$exports","default","$527d7f7180afe02d$var$ua","navigator","userAgent","toLowerCase","$527d7f7180afe02d$export$543c908bf17a24fb","$527d7f7180afe02d$export$bccc8605349feea7","$527d7f7180afe02d$export$f16ffc71033a7aaa","$527d7f7180afe02d$export$1940d5d2b4cf824d","devicePixelRatio","$527d7f7180afe02d$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$527d7f7180afe02d$export$9544418e5c6fedfe","Image","decode","$527d7f7180afe02d$export$700ce540937d8c69","passive","defineProperty","get","window","error","$1999371b8a7a6e92$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","document","createElement","style","all","width","height","getContext","$1999371b8a7a6e92$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$1999371b8a7a6e92$export$47503d53c08beb29","node","removeChild","$5fc8a3bf6573bb7d$export$9099ad97b570f7c","ImageBase","extent","resolution","pixelRatio","pixelRatio_","$5fc8a3bf6573bb7d$var$__extends","getExtent","getImage","getPixelRatio","getResolution","$935f8b7a5b85bfe8$export$9099ad97b570f7c","$5e2b7eeacdecf354$export$9099ad97b570f7c","$9b4dc89090328257$export$9099ad97b570f7c","$2e8d627307dae003$export$9099ad97b570f7c","AssertionError","code","message","split","name","$2e8d627307dae003$var$__extends","$9531785aa63836ff$export$b8795f4f643ce74f","assertion","errorCode","$2e8d627307dae003$exports","$6979b253edf31824$export$a7ecbd362d65c1fe","coordinates","$6979b253edf31824$export$dbb3d72606cdc11","$6979b253edf31824$export$2852acc8f8b94686","$6979b253edf31824$export$c7d6a927f416dd39","x","y","dx","dy","$6979b253edf31824$export$c422a9fcb5f1ee5c","coordinate","$6979b253edf31824$export$cc70e7e516e4370f","$6979b253edf31824$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$6979b253edf31824$export$ea8082d0226d35a5","opt_extent","$6979b253edf31824$export$80741250c74fd4fa","$6979b253edf31824$export$bcc761834e33d339","extent1","extent2","$6979b253edf31824$export$4b116deb3079b147","flatCoordinates","offset","end","stride","$6979b253edf31824$export$8696fee511ea7c7a","min","max","$6979b253edf31824$export$c26f7b9c5adc34b4","callback","val","$6979b253edf31824$export$3932426cd8118930","$6979b253edf31824$export$4e2fc25ce97f3583","$6979b253edf31824$export$35aedeaeee8be6cd","$6979b253edf31824$export$5100f0815ea32995","$6979b253edf31824$export$ab4e37d31d15614d","area","$6979b253edf31824$export$988399e568471db1","$6979b253edf31824$export$3dc3550566517965","$6979b253edf31824$export$e178c8044d3d0a05","$6979b253edf31824$export$339e303bf205caae","$6979b253edf31824$export$38622892ed79bdc7","corner","$6979b253edf31824$export$3212225221d5bc14","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6979b253edf31824$export$c491031eb9adcc3a","intersection","$6979b253edf31824$export$c3bd2c3b798b0350","$6979b253edf31824$export$76e02248c0889c3e","transformFn","opt_stops","xs","ys","l","apply","$6979b253edf31824$var$_boundingExtentXYs","$56a06269a268820b$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$56a06269a268820b$export$d2df825b2d8bc2ba","$56a06269a268820b$export$6dee5fd4fdf600ff","$2fea8d7b0a052aea$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","src","promise","listening_1","then","catch","listenerKeys","forEach","ImageWrapper","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$2fea8d7b0a052aea$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5fc8a3bf6573bb7d$exports","$9f0932f8a34c2627$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$9f0932f8a34c2627$var$__extends","element","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$2fea8d7b0a052aea$exports","listenImage","$c0f00e1ca40f5de0$exports","$c9c507281fcc3891$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$c9c507281fcc3891$export$af68584dedf5e52c","PI","$c9c507281fcc3891$export$9099ad97b570f7c","$c524398f6723d704$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$41189646474e5084$export$4b8705656de00c72","value","$41189646474e5084$export$4a376e0f60d976ee","cosh","exp","$41189646474e5084$export$e08236045caaa3e1","log2","log","LOG2E","$41189646474e5084$export$fd0b1e5ac4df516c","$41189646474e5084$export$8b6706701cd75ea9","$41189646474e5084$export$11468133b1231643","angleInRadians","$41189646474e5084$export$4fc80c88d72f096","angleInDegrees","$41189646474e5084$export$3334706ffb3dccb1","r","$41189646474e5084$export$45ca8e7f50ccf2e0","$7f3701aa8bdb506a$export$8c5f77743cd0e8b7","$7f3701aa8bdb506a$export$bb1f4f75177e5528","$7f3701aa8bdb506a$export$6fd015d56b8406c9","$7f3701aa8bdb506a$export$64afaa717a0c4932","$7f3701aa8bdb506a$export$2126dea64bc40b7b","tan","$7f3701aa8bdb506a$var$EPSG3857Projection","EPSG3857Projection","point","$7f3701aa8bdb506a$var$__extends","$7f3701aa8bdb506a$export$850c9b527a5298aa","$7f3701aa8bdb506a$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","slice","$7f3701aa8bdb506a$export$f361696640082386","atan","$9fa231a87381e908$export$6fd015d56b8406c9","$9fa231a87381e908$export$af68584dedf5e52c","$9fa231a87381e908$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$9fa231a87381e908$var$__extends","$9fa231a87381e908$export$850c9b527a5298aa","$b355c55a4bde1b89$var$cache","$57e7e4423e192b2f$var$transforms","$57e7e4423e192b2f$export$568ed88074851180","destination","sourceCode","destinationCode","$a33c8584730caef5$export$9099ad97b570f7c","$1a993eb37fc0a4e5$export$761de677acb0d085","$1a993eb37fc0a4e5$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$1a993eb37fc0a4e5$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$3b0bd531a043cbd1$export$bcc761834e33d339","coordinate1","coordinate2","equals","$3b0bd531a043cbd1$export$d40e2456b1281660","angle","cosAngle","sinAngle","$3b0bd531a043cbd1$export$c8ebaff90a21375a","projection","opt_sourceExtentWidth","projectionExtent","worldsAway","sourceExtentWidth","floor","$e9b048d51236bbbc$export$3fbbaef54e2e9d28","$e9b048d51236bbbc$export$678028d364072132","$e9b048d51236bbbc$export$6308908a0016f099","$b355c55a4bde1b89$export$568ed88074851180","$e9b048d51236bbbc$export$7eb84799c931fe91","projectionLike","replace","$e9b048d51236bbbc$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$e9b048d51236bbbc$export$747af4f49bde2f53","vertices","$e9b048d51236bbbc$export$a42db349809b0c24","projections","$e9b048d51236bbbc$export$fd4cd3535c7ea97f","$e9b048d51236bbbc$export$f704437a72056fb8","defaultCode","$e9b048d51236bbbc$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","$57e7e4423e192b2f$export$7eb84799c931fe91","$e9b048d51236bbbc$export$9336879ef6599bf5","$e9b048d51236bbbc$export$4b169b49e1a4823b","$e9b048d51236bbbc$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$e9b048d51236bbbc$var$userProjection","$e9b048d51236bbbc$export$4a182a4d53d7595c","$e9b048d51236bbbc$export$b5d00774755783fc","destProjection","$e9b048d51236bbbc$export$f87215506b474b9e","$7f3701aa8bdb506a$exports","PROJECTIONS","$9fa231a87381e908$exports","fromEPSG4326","toEPSG4326","$c79baf82c906261e$var$brokenDiagonalRendering_","$c2aa963399ff5087$export$9099ad97b570f7c","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","ceil","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$9a405cae94b418c1$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$c79baf82c906261e$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$c79baf82c906261e$var$verifyBrokenDiagonalRendering","$c79baf82c906261e$export$fbbff54b3c32db8d","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$c79baf82c906261e$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","context","round","pixelRound","scale","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","mat","maxRow","maxEl","absValue","tmp","j","coef","k","m","$41189646474e5084$export$27dc5719ceda6735","getImageData","$c79baf82c906261e$var$isBrokenDiagonalRendering","ud","vd","step","steps","translate","strokeStyle","lineWidth","stroke","$8cf1db551f7c8651$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$c79baf82c906261e$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$8cf1db551f7c8651$var$__extends","reproject_","z","getTileSize","leftToLoad_1","sourceListenKey_1","e","state1","unlistenSources_","setTimeout","$cf2f6e20b6b138a4$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","clear","containsKey","f","entry","value_","key_","newer","older","remove","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","pop","set","setSize","$c15fc44d1077d497$export$ea8082d0226d35a5","opt_tileCoord","$c15fc44d1077d497$export$1039fb0288fd71e3","$c15fc44d1077d497$export$a0f0ccbe5bbc0789","$e0d8d793f2458be2$export$9099ad97b570f7c","TileCache","$e0d8d793f2458be2$var$__extends","expireCache","usedTiles","pruneExceptNewestZ","map","Number","$c15fc44d1077d497$export$5208a752d34424e5","$9c50562c86c5e818$export$9099ad97b570f7c","$78afe97655c173a4$export$9099ad97b570f7c","$63adf90947e79212$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$63adf90947e79212$var$__extends","getRevision","len","ol_key","$63adf90947e79212$export$21f63b82add5980c","$63adf90947e79212$export$9099ad97b570f7c","$9403ba232d3d3401$export$b902cfd711fa7f06","ObjectEvent","oldValue","$9403ba232d3d3401$var$__extends","$9403ba232d3d3401$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$63adf90947e79212$exports","$12755424859afe42$export$9099ad97b570f7c","$bae52fc8280398fa$var$adaptAttributions","attributionLike","frameState","$bae52fc8280398fa$export$9099ad97b570f7c","Source","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","Promise","resolve","reject","$bae52fc8280398fa$var$__extends","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getWrapX","getContextOptions","refresh","setAttributions","$9403ba232d3d3401$exports","$3d04e27be03144b8$var$TileRange","TileRange","contains","containsXY","containsTileRange","tileRange","extend","getHeight","getSize","getWidth","intersects","$3d04e27be03144b8$export$ea8082d0226d35a5","$3d04e27be03144b8$export$9099ad97b570f7c","$25e118ccc56a5e21$export$c563c2b7121f8771","$25e118ccc56a5e21$export$48d31d2725e4d98b","opt_size","$1d0405a55c5b390d$var$tmpTileCoord","$1d0405a55c5b390d$export$9099ad97b570f7c","TileGrid","opt_strict","compare","zoomFactor","minZoom","resolutions_","resolutions","every","currentVal","res","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","jj","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getMaxZoom","getMinZoom","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","$d4d4204e000d87e1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$d4d4204e000d87e1$var$resolutionsFromExtent","$d4d4204e000d87e1$export$57c49ef1657592d4","$d4d4204e000d87e1$export$9666e825b22d806d","$d4d4204e000d87e1$export$6dfef52f91d4f582","opt_maxResolution","maxResolution","half","$5cca03204735719f$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$e0d8d793f2458be2$exports","cacheSize","tmpSize","tileOptions","zDirection","$5cca03204735719f$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","ratio","getTileCoordForTileUrlFunction","opt_projection","worldWidth","$d4d4204e000d87e1$export$5a0d9577a24f3c5b","$c15fc44d1077d497$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$bae52fc8280398fa$exports","$5cca03204735719f$export$8434c8db61edbf9d","TileSourceEvent","$5cca03204735719f$export$9099ad97b570f7c","$598ebbe522bf4b2d$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","$598ebbe522bf4b2d$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c15fc44d1077d497$export$4639c7f2947f4458","$598ebbe522bf4b2d$export$c6a04e0c49b28953","$3e9b4960f3db4741$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$3e9b4960f3db4741$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","$5cca03204735719f$exports","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","parseInt","$598ebbe522bf4b2d$export$47abe479fba0e55d","join","$599f0e87b598536d$var$defaultTileLoadFunction","imageTile","$599f0e87b598536d$export$9099ad97b570f7c","TileImage","tileClass","$9f0932f8a34c2627$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$599f0e87b598536d$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","cache","newTile","$8cf1db551f7c8651$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","$3e9b4960f3db4741$exports","$ff7bc28f591d2243$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$d4d4204e000d87e1$export$5731532c605ee56","$ff7bc28f591d2243$var$__extends","$599f0e87b598536d$exports","$8a7bf7ffc046ec6d$export$bd9c1867755cf54e","$8a7bf7ffc046ec6d$export$9099ad97b570f7c","OSM","$8a7bf7ffc046ec6d$var$__extends","$ff7bc28f591d2243$exports","$af9ac451f9e710c1$export$9099ad97b570f7c","$5bc06fc72e60a1e5$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","minResolution","className_","className","$5bc06fc72e60a1e5$var$__extends","getClassName","getLayerState","opt_managed","layer","managed","getZIndex","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$89b1d20a080b27f0$export$9099ad97b570f7c","$c42f11a8ed244eef$export$16970faadcd3f29b","layerState","viewState","$c42f11a8ed244eef$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","setMap","handleSourcePropertyChange_","setSource","$c42f11a8ed244eef$var$__extends","array","states","getSource","handleSourceChange_","getFeatures","pixel","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$5bc06fc72e60a1e5$exports","$6138c5b4bdbde302$export$9099ad97b570f7c","$2670773e9616adac$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$2670773e9616adac$var$__extends","getPreload","getUseInterimTilesOnError","$c42f11a8ed244eef$exports","$d210c08aef54bfde$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$d210c08aef54bfde$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","$d26dae22fe1d838f$var$transformStringDiv","$911ab4cf0143b734$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","$911ab4cf0143b734$var$__extends","$d26dae22fe1d838f$export$6af9bbf310c9e4bf","$d26dae22fe1d838f$export$452ae967caf14641","dx1","dy1","sx","sy","dx2","dy2","$d26dae22fe1d838f$export$6e6aac0f60e83c70","det","$d26dae22fe1d838f$export$47bee913e0e80eb4","transformString","$8dfbec8593aa270d$export$4b206f1dd0085e9f","$8dfbec8593aa270d$export$6cfb92f3ca39d412","$8dfbec8593aa270d$export$a6463a3b3793c500","$8dfbec8593aa270d$var$fontRegEx","RegExp","$8dfbec8593aa270d$var$fontRegExMatchIndex","$8dfbec8593aa270d$export$b705256ab57c20ca","fontSpec","lineHeight","weight","variant","families","family","$8dfbec8593aa270d$export$e04cd5eb7e7428c6","$a8df043d7f945436$export$9099ad97b570f7c","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","$a8df043d7f945436$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","position","appendChild","left","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","event_1","$911ab4cf0143b734$exports","preRender","postRender","getRenderTransform","offsetX","renderPixel","layerExtent","pixelToCoordinateTransform","newCanvas","newContext","clearRect","err","Uint8Array","$d210c08aef54bfde$exports","$911c86a56b705ee0$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$911c86a56b705ee0$var$__extends","isDrawableTile","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","tileResolution","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","sort","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","w","h","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","animate","postRenderFunction","tileSource1","frameState1","tileSourceKey","postRenderFunctions","opt_tileCallback","wantedTiles","tileQueue","isKeyQueued","enqueue","$a8df043d7f945436$exports","$911c86a56b705ee0$export$9099ad97b570f7c","$326310a679f3ff3e$export$9099ad97b570f7c","TileLayer","$326310a679f3ff3e$var$__extends","$911c86a56b705ee0$exports","$2670773e9616adac$exports","$05f8d3eb3a3b3632$var$HEX_COLOR_RE_","$05f8d3eb3a3b3632$var$NAMED_COLOR_RE_","$05f8d3eb3a3b3632$export$9fe004474d6f7f65","color","g","$05f8d3eb3a3b3632$export$47bee913e0e80eb4","$05f8d3eb3a3b3632$var$fromNamed","el","body","rgb","getComputedStyle","$05f8d3eb3a3b3632$export$2e33abec8aecd572","$0828fcafb706d3fc$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","$0828fcafb706d3fc$var$getKey","maxCacheSize","$0828fcafb706d3fc$export$601b9e2be44c7cb2","$acb05479f915e9be$var$expireIconCache","$acb05479f915e9be$export$9099ad97b570f7c","MapRenderer","map_","$acb05479f915e9be$var$__extends","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","$3b0bd531a043cbd1$export$5a0d9577a24f3c5b","offsets","layerStates","numLayers","tmpCoord","inView","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","$0511c8c10849dc1a$export$907cf5cff4a8acb1","console","warn","$0511c8c10849dc1a$var$measureFont","$0511c8c10849dc1a$var$measureContext","$0511c8c10849dc1a$export$384c0f09c94ed6cc","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$0511c8c10849dc1a$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","$0511c8c10849dc1a$var$measureText","measureText","$a7bc897a99e1468c$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$8dfbec8593aa270d$export$2fbf9d496fb0d5a8","getViewport","insertBefore","firstChild","children_","renderedVisible_","$a7bc897a99e1468c$var$__extends","declutterLayers","previousElement","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$1999371b8a7a6e92$export$439ebc2b0f0ec9f4","display","$acb05479f915e9be$exports","$404829bff740bb1b$export$9099ad97b570f7c","$6f518feb4a5d11c4$var$Property","$6f518feb4a5d11c4$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$6f518feb4a5d11c4$var$__extends","$6f518feb4a5d11c4$export$9099ad97b570f7c","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","item","insertAt","elem","removeAt","setAt","opt_except","$9b534bf563223e28$var$Property","$9b534bf563223e28$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$6f518feb4a5d11c4$exports","setLayers","$9b534bf563223e28$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$fb4925193e6007b2$export$9099ad97b570f7c","MapEvent","$fb4925193e6007b2$var$__extends","$87748d91c1ff80d0$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$87748d91c1ff80d0$var$__extends","getEventPixel","getCoordinateFromPixel","$fb4925193e6007b2$exports","$d1dde526982cc5ac$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a59fb3ca034fecde$export$9099ad97b570f7c","$08be60d5c9a54b41$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$08be60d5c9a54b41$var$__extends","emulateClick_","pointerEvent","newEvent","$87748d91c1ff80d0$exports","clearTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$97a07643bed490b2$export$9099ad97b570f7c","$de0c0f8112f90228$export$9099ad97b570f7c","$c6360ad74bd7a546$export$55b8074a560bbdf4","$c6360ad74bd7a546$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$40a9fb900c9e0ad4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$40a9fb900c9e0ad4$var$__extends","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$40a9fb900c9e0ad4$export$f7de9366327711a7","tileCenter","deltaX","deltaY","$69221d06b0113aff$export$9099ad97b570f7c","$8d321ccd3e128174$export$9099ad97b570f7c","$5b15465d65b208f9$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","$5b15465d65b208f9$export$eaafe0fae18e32b1","$c5d62abeb18093bc$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$c5d62abeb18093bc$var$getSmoothClampedResolution","$c5d62abeb18093bc$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$dd50dbab14b9e355$export$e97ec87d2336bd4e","$dd50dbab14b9e355$export$eaafe0fae18e32b1","$0ad743cdd11ec12f$export$9099ad97b570f7c","$fb5c77af8a17a25c$export$92106241c01aa541","opt_dest","dest","$b682244a7d047928$var$tmpTransform","$b682244a7d047928$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$b682244a7d047928$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6979b253edf31824$export$d1e01ccfd06bf8ee","rotate","anchor","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$5caa66f67d70c90b$export$2a65008b73824080","layout","$5caa66f67d70c90b$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$5caa66f67d70c90b$export$9099ad97b570f7c","SimpleGeometry","$5caa66f67d70c90b$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$5caa66f67d70c90b$var$getLayoutForStride","anchorX","anchorY","$fb5c77af8a17a25c$export$d40e2456b1281660","$fb5c77af8a17a25c$export$8f869025bba9609b","$fb5c77af8a17a25c$export$41b0d7466cde8385","$b682244a7d047928$exports","$c8d16959777aa5d2$var$assignClosest","offset1","offset2","$c8d16959777aa5d2$export$acf7548d1f0e8581","squaredDelta","$c8d16959777aa5d2$export$ba38095f6bb45df2","ends","$c8d16959777aa5d2$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$c8d16959777aa5d2$export$3dd3914e22f9012e","$fa72d035ed15d370$export$e175f505890ac90f","$fa72d035ed15d370$export$ab1a51db55485752","coordinatess","opt_ends","$f117f014c02c321b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$f117f014c02c321b$export$383ea8a1f2974dfb","$f117f014c02c321b$export$e29de4fdb2175738","$f117f014c02c321b$export$1df19a1eb5514c2f","simplifiedEnds","$8156c430059b0be1$export$92f32d891164b0ac","opt_coordinates","$8156c430059b0be1$export$d82a8a3167f968d","opt_coordinatess","$1720796d74226cac$export$9bf2059fd656d5e9","twiceArea","$1720796d74226cac$export$99cb92d00fd73c87","$14f82d27708e2673$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$14f82d27708e2673$var$__extends","getArea","$5caa66f67d70c90b$exports","$b7b44b2e7369d419$export$9099ad97b570f7c","Point","$b7b44b2e7369d419$var$__extends","$fa72d035ed15d370$export$a53e62528b652807","$d0ff7551bd225db7$export$f7b55b637f92fd7","$d0ff7551bd225db7$export$e2ed757909b25f63","wn","$d0ff7551bd225db7$export$51e46a3625992b91","$fba4e8b2345a6181$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$3f240441e8158030$export$26f047a5bfac4b1a","coordinatesExtent","ret","$453f0f3786b8ff29$export$40f3d9558cf6e846","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","$6979b253edf31824$export$525a75abb91115e3","$3f240441e8158030$export$717c2c7c46a5bf3d","$3f240441e8158030$export$f14bd9270666b480","$081640ea8b715cda$export$c77fe031a1447f2e","$e73c8a2e0bc9e480$export$add61ad31d0a68b4","edge","$e73c8a2e0bc9e480$export$586adaf930d9fdb6","opt_right","right","isClockwise","$e73c8a2e0bc9e480$export$325e57738fd8b321","$70159e2f3144e634$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$70159e2f3144e634$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$b7b44b2e7369d419$exports","getLinearRingCount","getLinearRing","$14f82d27708e2673$exports","getLinearRings","linearRings","$70159e2f3144e634$export$9099ad97b570f7c","$70159e2f3144e634$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$70159e2f3144e634$export$b50d271c6e9656cd","$70159e2f3144e634$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$70159e2f3144e634$export$5d1798f0e1df079","getRadius","startAngle","$4d9e33768334286e$var$animationCallback","returnValue","$4d9e33768334286e$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d9e33768334286e$export$8b6914b45b83f21f","resolutionConstraint","smoothResolutionConstraint","projExtent","constrainResolution","capped","$c5d62abeb18093bc$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$c5d62abeb18093bc$export$7690ad4e930f454b","constraint","$4d9e33768334286e$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d9e33768334286e$export$5d87c27d7d9f380e","animation","sourceRotation","targetRotation","$4d9e33768334286e$var$calculateCenterOn","rotX","rotY","$4d9e33768334286e$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$4d9e33768334286e$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","$e9b048d51236bbbc$export$a7d473ff80a6a3b","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$70159e2f3144e634$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","targetRes","$3141486bef412326$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$9b534bf563223e28$exports","view","$4d9e33768334286e$exports","$3141486bef412326$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$40a9fb900c9e0ad4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","$3141486bef412326$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getOverlayById","group","collection","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","getActive","handlePostRender","hints","viewHints","lowOnFrameBudget","$08be60d5c9a54b41$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","$88abedb827e5ec1b$export$9099ad97b570f7c","Control","target_","$88abedb827e5ec1b$var$__extends","mapEvent","$72fd36fb1a212cd3$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$72fd36fb1a212cd3$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","$1999371b8a7a6e92$export$f0994cfd84ab1152","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$88abedb827e5ec1b$exports","$f0a10ea98a6cb519$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$f0a10ea98a6cb519$var$__extends","resetNorth_","$d3f921aa5a285174$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$d3f921aa5a285174$var$__extends","zoomByDelta_","currentZoom","newZoom","$0d5605eedb6da3c8$export$9099ad97b570f7c","$33139a7ba78491c7$export$63568b31cb17dd4d","$33139a7ba78491c7$export$d2c07614bfd6a817","$33139a7ba78491c7$export$9099ad97b570f7c","Interaction","setActive","$33139a7ba78491c7$var$__extends","active","$787de85327c916bb$export$9099ad97b570f7c","DoubleClickZoom","delta_","$787de85327c916bb$var$__extends","stopEvent","shiftKey","$33139a7ba78491c7$exports","zoomByDelta","$82cbbbeb425d67d7$export$e61edea4dfe4ed9b","$82cbbbeb425d67d7$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$82cbbbeb425d67d7$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$82cbbbeb425d67d7$var$isPointerDraggingEvent","$83e85025105111b6$export$8dbdea330bbd6b3c","conditions","pass","$83e85025105111b6$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$83e85025105111b6$export$584a07df7b145c47","hasAttribute","activeElement","$83e85025105111b6$export$363947888fb85da6","$83e85025105111b6$export$a8612972eacfc116","$83e85025105111b6$export$9f5e19851eeaf2c1","$83e85025105111b6$export$1734dfcac3c09b2f","$83e85025105111b6$export$59c8376875f673f8","$83e85025105111b6$export$5bbcce8021828272","tagName","$83e85025105111b6$export$d31d3f3aa38542a8","pointerType","$83e85025105111b6$export$45cd27c0322d6513","isPrimary","$a42fdc6c339cab83$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a42fdc6c339cab83$var$__extends","centroid","$82cbbbeb425d67d7$exports","update","begin","getDistance","getAngle","centerpx","$9057ffe9f6806c34$export$9099ad97b570f7c","DragRotate","lastAngle_","$9057ffe9f6806c34$var$__extends","$6a5b5969cfd0314b$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$6a5b5969cfd0314b$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$66cbaf7779269f15$var$DragBoxEventType","$66cbaf7779269f15$export$4d9b552836937ca2","DragBoxEvent","$66cbaf7779269f15$var$__extends","$66cbaf7779269f15$export$9099ad97b570f7c","DragBox","box_","$6a5b5969cfd0314b$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$0da21c36fc8689b0$export$9099ad97b570f7c","DragZoom","out_","out","$0da21c36fc8689b0$var$__extends","$66cbaf7779269f15$exports","$42a6230b71cef258$export$9099ad97b570f7c","$f6b95667a4c90ca6$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$f6b95667a4c90ca6$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$9eebcf690d0cc684$export$9099ad97b570f7c","KeyboardZoom","$9eebcf690d0cc684$var$__extends","$f3f3e2bdc0486d9f$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$e4045b56fe7b53f8$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$e4045b56fe7b53f8$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$e4045b56fe7b53f8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$7569a186ce0b430a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$7569a186ce0b430a$var$__extends","rotationDelta","touch0","touch1","$916765f6a8929418$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$916765f6a8929418$var$__extends","scaleDelta","$fb244fe1c9d9d25f$export$9099ad97b570f7c","Map1","$d3f921aa5a285174$exports","zoomOptions","$f0a10ea98a6cb519$exports","rotateOptions","attribution","$72fd36fb1a212cd3$exports","attributionOptions","$b0b013c00d4892b9$export$b403fbac94228e09","altShiftDragRotate","$9057ffe9f6806c34$exports","doubleClickZoom","$787de85327c916bb$exports","zoomDelta","zoomDuration","dragPan","$a42fdc6c339cab83$exports","pinchRotate","$7569a186ce0b430a$exports","pinchZoom","$916765f6a8929418$exports","keyboard","$f6b95667a4c90ca6$exports","$9eebcf690d0cc684$exports","mouseWheelZoom","$e4045b56fe7b53f8$exports","shiftDragZoom","$0da21c36fc8689b0$exports","$6e4cba11d32981b8$export$b403fbac94228e09","$fb244fe1c9d9d25f$var$__extends","$a7bc897a99e1468c$exports","$3141486bef412326$exports","$fb244fe1c9d9d25f$exports","$326310a679f3ff3e$exports","$8a7bf7ffc046ec6d$exports"],"version":3,"file":"index.8973c6f3.js.map"}